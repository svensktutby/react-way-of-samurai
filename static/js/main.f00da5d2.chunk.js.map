{"version":3,"sources":["assets/images/userAvatar.svg","redux/profileReducer.ts","api/profileApi.ts","redux/dialogsReducer.ts","api/api.ts","utils/randomId.ts","components/Navbar/Navbar.module.css","components/common/styles/Button.module.css","components/Login/Login.module.css","redux/middleware.ts","redux/usersReducer.ts","api/usersApi.ts","redux/authReducer.ts","api/authApi.ts","redux/appReducer.ts","redux/sidebarReducer.ts","redux/reduxStore.ts","reportWebVitals.ts","components/common/Paginator/Paginator.tsx","components/Users/User/User.tsx","components/Users/Users.tsx","redux/usersSelectors.ts","components/Users/UsersContainer.tsx","assets/images/logo.svg","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Navbar/Navbar.tsx","components/Login/Login.tsx","components/common/Error404/Error404.tsx","App.tsx","index.tsx","components/common/Paginator/Paginator.module.css","components/Users/User/User.module.css","components/common/Preloader/Preloader.tsx","App.module.css","components/Header/Header.module.css","components/common/Error404/Error404.module.css","utils/validators.ts","components/common/Preloader/Preloader.module.css","components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.tsx","components/Users/Users.module.css"],"names":["ActionType","profileApi","userId","API","get","then","res","data","status","put","initialState","posts","id","randomId","message","likesCount","profile","profileReducer","state","action","type","ADD_POST","post","payload","DELETE_POST","filter","p","SET_USER_PROFILE","SET_STATUS","actions","addPost","text","deletePost","setUserProfile","setStatus","getProfile","dispatch","a","getStatus","updateStatus","resultCode","ResultCode","Success","dialogs","name","messages","dialogsReducer","SEND_MESSAGE","sendMessage","axios","create","baseURL","withCredentials","headers","process","Math","floor","random","toString","module","exports","composeEnhancers","createLogger","duration","collapsed","colors","title","prevState","nextState","error","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","enhancedStore","applyMiddleware","usersApi","page","pageSize","delete","users","totalUsersCount","currentPage","isFetching","followingInProgress","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","totalCount","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","authApi","email","password","rememberMe","login","isAuth","SET_AUTH_USER_DATA","getAuthUserData","initialized","INITIALIZED_SUCCESS","rootReducer","combineReducers","profilePage","dialogsPage","sidebar","usersPage","map","u","followed","auth","app","form","store","createStore","onPerfEntry","Paginator","totalItemsCount","changePageHandler","portionSize","portionCount","ceil","startIndex","pages","Array","fill","reduce","acc","item","idx","current","className","s","paginator","btn","disabled","onClick","isCurrent","selected","User","user","follow","unfollow","avatarWrapper","to","avatar","src","photos","small","userAvatar","width","height","alt","styleBtn","some","info","location","Users","props","userElements","usersBlock","list","getUsers","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","setCurrentPage","usersActions","UsersAPIContainer","requestUsers","this","followUser","unfollowUser","Preloader","Component","UsersContainer","connect","usersSelectors","items","Header","logout","header","logo","loginBlock","HeaderAPIContainer","logoutCallback","HeaderContainer","Navbar","nav","link","activeClassName","active","maxLength30","maxLengthCreator","LoginFormRedux","reduxForm","handleSubmit","onSubmit","Field","component","Input","placeholder","validate","required","checkboxWrapper","checkbox","hint","errorWrapper","btnWrapper","LoginPage","loginData","length","stopSubmit","_error","loginCallback","loginFormWrapper","formData","Error404","main","DialogsContainer","lazy","default","ProfileContainer","App","initializeApp","appWrapper","appWrapperContent","fallback","preloaderPageWrapper","exact","path","render","preloaderAppWrapper","AppContainer","AuthUserDataPromise","Promise","all","withRouter","SamuraiJSApp","ReactDOM","document","getElementById","Function","getCLS","getFID","getFCP","getLCP","getTTFB","preloader","loaderCircle","loaderBottom","value","undefined","maxLength","FormControl","meta","touched","children","hasError","formControlClassName","formControl","formControlError","Textarea","input","restProps"],"mappings":"oIAAe,QAA0B,wC,+MCQ7BA,E,uDCLCC,EAAa,SACbC,GACT,OAAOC,IAAIC,IAAJ,kBAAgCF,IAAUG,MAAK,SAACC,GAAD,OAASA,EAAIC,SAF1DN,EAAa,SAIdC,GACR,OAAOC,IAAIC,IAAJ,yBAAkCF,IAAUG,MAAK,SAACC,GAAD,OAASA,EAAIC,SAL5DN,EAAa,SAOXO,GACX,OAAOL,IAAIM,IAAJ,kBAA4C,CAAED,WAAUH,MAC7D,SAACC,GAAD,OAASA,EAAIC,U,SDJPP,K,+BAAAA,E,qCAAAA,E,+CAAAA,E,oCAAAA,M,KAOZ,IAAMU,EAAe,CACnBC,MAAO,CACL,CACEC,GAAIC,cACJC,QAAS,YACTC,WAAY,IAEd,CACEH,GAAIC,cACJC,QAAS,SACTC,WAAY,GAEd,CACEH,GAAIC,cACJC,QAAS,SACTC,WAAY,MAGhBC,QAAS,KACTR,OAAQ,IAGGS,EAAiB,WAGF,IAF1BC,EAEyB,uDAFjBR,EACRS,EACyB,uCACzB,OAAQA,EAAOC,MACb,KAAKpB,EAAWqB,SACd,IAAMC,EAAiB,CACrBV,GAAIC,cACJC,QAASK,EAAOI,QAChBR,WAAY,GAGd,OAAO,2BAAKG,GAAZ,IAAmBP,MAAM,GAAD,mBAAMO,EAAMP,OAAZ,CAAmBW,MAG7C,KAAKtB,EAAWwB,YACd,OAAO,2BACFN,GADL,IAEEP,MAAOO,EAAMP,MAAMc,QAAO,SAACC,GAAD,OAAOA,EAAEd,KAAOO,EAAOI,aAGrD,KAAKvB,EAAW2B,iBACd,OAAO,2BAAKT,GAAZ,IAAmBF,QAASG,EAAOI,UAErC,KAAKvB,EAAW4B,WACd,OAAO,2BAAKV,GAAZ,IAAmBV,OAAQW,EAAOI,UAEpC,QACE,OAAOL,IAKAW,EAAU,CACrBC,QAAS,SAACC,GAAD,MACN,CAAEX,KAAMpB,EAAWqB,SAAUE,QAASQ,IAEzCC,WAAY,SAACpB,GAAD,MACT,CAAEQ,KAAMpB,EAAWwB,YAAaD,QAASX,IAE5CqB,eAAgB,SAACjB,GAAD,MACb,CAAEI,KAAMpB,EAAW2B,iBAAkBJ,QAASP,IAEjDkB,UAAW,SAAC1B,GAAD,MACR,CAAEY,KAAMpB,EAAW4B,WAAYL,QAASf,KAIhC2B,EAAa,SAACjC,GAAD,8CAA+B,WAAOkC,GAAP,eAAAC,EAAA,sEACpCpC,EAAsBC,GADc,OACjDK,EADiD,OAGvD6B,EAASP,EAAQI,eAAe1B,IAHuB,2CAA/B,uDAMb+B,EAAY,SAACpC,GAAD,8CAA+B,WAAOkC,GAAP,eAAAC,EAAA,sEACnCpC,EAAqBC,GADc,OAChDK,EADgD,OAGtD6B,EAASP,EAAQK,UAAU3B,IAH2B,2CAA/B,uDAMZgC,EAAe,SAAC/B,GAAD,8CAA+B,WAAO4B,GAAP,SAAAC,EAAA,sEACtCpC,EAAwBO,GADc,cAGhDgC,aAAeC,IAAWC,SACjCN,EAASP,EAAQK,UAAU1B,IAJ4B,2CAA/B,wD,yGE9FhBR,E,iCAAAA,K,wCAAAA,M,KAIZ,IAAMU,EAAe,CACnBiC,QAAS,CACP,CACE/B,GAAIC,cACJ+B,KAAM,UAER,CACEhC,GAAIC,cACJ+B,KAAM,YAER,CACEhC,GAAIC,cACJ+B,KAAM,WAER,CACEhC,GAAIC,cACJ+B,KAAM,YAGVC,SAAU,CACR,CACEjC,GAAIC,cACJC,QAAS,MAEX,CACEF,GAAIC,cACJC,QAAS,aAEX,CACEF,GAAIC,cACJC,QAAS,QAKFgC,EAAiB,WAGF,IAF1B5B,EAEyB,uDAFjBR,EACRS,EACyB,uCACzB,OAAQA,EAAOC,MACb,KAAKpB,EAAW+C,aACd,IAAMjC,EAAuB,CAC3BF,GAAIC,cACJC,QAASK,EAAOI,SAGlB,OAAO,2BACFL,GADL,IAEE2B,SAAS,GAAD,mBAAM3B,EAAM2B,UAAZ,CAAsB/B,MAIlC,QACE,OAAOI,IAKAW,EAAU,CACrBmB,YAAa,SAAClC,GAAD,MACV,CAAEM,KAAMpB,EAAW+C,aAAcxB,QAAST,M,gCCnE/C,wEASY2B,EATZ,mB,SASYA,O,qBAAAA,I,kBAAAA,M,KAWL,IAAMtC,EAAM8C,IAAMC,OAAO,CAC9BC,QAAS,gDACTC,iBAAiB,EACjBC,QAAS,CACP,UAAWC,2C,gCCxBf,kCAAO,IAAMzC,EAAW,kBACtB0C,KAAKC,MAAsB,IAAhBD,KAAKE,UAAgBC,SAAS,M,yCCA3CC,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,KAAO,qBAAqB,OAAS,yB,mBCA7GD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,aAAa,6B,mBCAzDD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,MAAQ,qBAAqB,gBAAkB,+BAA+B,WAAa,0BAA0B,SAAW,wBAAwB,KAAO,oBAAoB,aAAe,4BAA4B,MAAQ,uB,iNCoB7QC,GAfSC,uBAAa,CAC1BC,UAAU,EACVC,WAAW,EACXC,OAAQ,CACNC,MAAO,iBAAM,WACbC,UAAW,iBAAM,WACjBhD,OAAQ,iBAAM,WACdiD,UAAW,iBAAM,WACjBC,MAAO,iBAAM,cAMAC,OAAOC,qCAC8BC,KAEhDC,EAAgC,CAACC,KAIhC,ICpBK1E,EDoBC2E,EAAgBd,EAAiBe,IAAe,WAAf,EAAmBH,I,yCEzBpDI,EAAW,WACwC,IAArDC,EAAoD,uDAA7C,EAAGC,EAA0C,uDAA/B,EAC5B,OAAO5E,IAAIC,IAAJ,qBACS0E,EADT,kBACuBC,IAC5B1E,MAAK,SAACC,GAAD,OAASA,EAAIC,SAJXsE,EAAW,SAOf3E,GACL,OAAOC,IAAImB,KAAJ,iBAAoCpB,IAAUG,MACnD,SAACC,GAAD,OAASA,EAAIC,SATNsE,EAAW,SAab3E,GACP,OAAOC,IAAI6E,OAAJ,iBAAsC9E,IAAUG,MACrD,SAACC,GAAD,OAASA,EAAIC,U,SDVPP,K,yBAAAA,E,6BAAAA,E,+BAAAA,E,6CAAAA,E,uDAAAA,E,iDAAAA,E,sEAAAA,M,KAUZ,IETYA,EFSNU,EAAe,CACnBuE,MAAO,GACPF,SAAU,EACVG,gBAAiB,EACjBC,YAAa,EACbC,YAAY,EACZC,oBAAqB,IAgEVxD,EACH,SAAC3B,GAAD,MACL,CAAEkB,KAAMpB,EAAWsF,OAAQ/D,QAASrB,IAF5B2B,EAID,SAAC3B,GAAD,MACP,CAAEkB,KAAMpB,EAAWuF,SAAUhE,QAASrB,IAL9B2B,EAOD,SAACoD,GAAD,MACP,CAAE7D,KAAMpB,EAAWwF,UAAWjE,QAAS0D,IAR/BpD,EAUK,SAACiD,GAAD,MACb,CAAE1D,KAAMpB,EAAWyF,iBAAkBlE,QAASuD,IAXtCjD,EAaS,SAAC6D,GAAD,MACjB,CAAEtE,KAAMpB,EAAW2F,sBAAuBpE,QAASmE,IAd3C7D,EAgBO,SAACuD,GAAD,MACf,CAAEhE,KAAMpB,EAAW4F,mBAAoBrE,QAAS6D,IAjBxCvD,EAmBc,SAACuD,EAAqBlF,GAAtB,MACtB,CACCkB,KAAMpB,EAAW6F,6BACjBtE,QAAS,CACP6D,aACAlF,Y,QG5FK4F,EAAU,WAEnB,OAAO3F,IAAIC,IAAJ,WAAwDC,MAC7D,SAACC,GAAD,OAASA,EAAIC,SAHNuF,EAAU,YAU+C,IAHlEC,EAGiE,EAHjEA,MACAC,EAEiE,EAFjEA,SAEiE,IADjEC,kBACiE,SACjE,OAAO9F,IAAImB,KAAJ,aAA+D,CACpEyE,QACAC,WACAC,eACC5F,MAAK,SAACC,GAAD,OAASA,EAAIC,SAfZuF,EAAU,WAkBnB,OAAO3F,IAAI6E,OAAJ,cAA0C3E,MAAK,SAACC,GAAD,OAASA,EAAIC,U,SD7B3DP,K,iDAAAA,M,KAIZ,IENYA,EFMNU,EAAe,CACnBE,GAAI,KACJmF,MAAO,KACPG,MAAO,KACPC,QAAQ,GAoBGtE,EACM,SACfjB,EACAmF,EACAG,EACAC,GAJe,MAMd,CACC/E,KAAMpB,EAAWoG,mBACjB7E,QAAS,CAAEX,KAAImF,QAAOG,QAAOC,YAKtBE,EAAkB,yDAAiB,WAAOjE,GAAP,uBAAAC,EAAA,sEAC3ByD,IAD2B,QACxCvF,EADwC,QAGrCiC,aAAeC,IAAWC,UAAU,EACdnC,EAAKA,KAA1BK,EADkC,EAClCA,GAAImF,EAD8B,EAC9BA,MAAOG,EADuB,EACvBA,MAEnB9D,EAASP,EAAwBjB,EAAImF,EAAOG,GAAO,KANP,2CAAjB,wD,SE5CnBlG,K,kDAAAA,M,KAIZ,IAAMU,EAAe,CACnB4F,aAAa,GAoBFzE,EACS,iBACjB,CACCT,KAAMpB,EAAWuG,sBClCjB7F,EAAe,GCaf8F,GAAcC,YAAgB,CAClCC,gBACAC,gBACAC,QDZ4B,WAGX,IAFjB1F,EAEgB,uDAFRR,EACRS,EACgB,uCAGZ,OAFIA,EAAOC,KAEJF,GCOX2F,UNS0B,WAGF,IAFxB3F,EAEuB,uDAFfR,EACRS,EACuB,uCACvB,OAAQA,EAAOC,MACb,KAAKpB,EAAWsF,OACd,OAAO,2BACFpE,GADL,IAEE+D,MAAO/D,EAAM+D,MAAM6B,KAAI,SAACC,GAAD,OACrBA,EAAEnG,KAAOO,EAAOI,QAAhB,2BAA+BwF,GAA/B,IAAkCC,UAAU,IAASD,OAI3D,KAAK/G,EAAWuF,SACd,OAAO,2BACFrE,GADL,IAEE+D,MAAO/D,EAAM+D,MAAM6B,KAAI,SAACC,GAAD,OACrBA,EAAEnG,KAAOO,EAAOI,QAAhB,2BAA+BwF,GAA/B,IAAkCC,UAAU,IAAUD,OAI5D,KAAK/G,EAAWwF,UACd,OAAO,2BACFtE,GADL,IAEE+D,MAAO9D,EAAOI,UAGlB,KAAKvB,EAAWyF,iBACd,OAAO,2BACFvE,GADL,IAEEiE,YAAahE,EAAOI,UAGxB,KAAKvB,EAAW2F,sBACd,OAAO,2BACFzE,GADL,IAEEgE,gBAAiB/D,EAAOI,UAG5B,KAAKvB,EAAW4F,mBACd,OAAO,2BACF1E,GADL,IAEEkE,WAAYjE,EAAOI,UAGvB,KAAKvB,EAAW6F,6BACd,OAAO,2BACF3E,GADL,IAEEmE,oBAAqBlE,EAAOI,QAAQ6D,WAAf,sBACblE,EAAMmE,qBADO,CACclE,EAAOI,QAAQrB,SAC9CgB,EAAMmE,oBAAoB5D,QACxB,SAACb,GAAD,OAAQA,IAAOO,EAAOI,QAAQrB,YAIxC,QACE,OAAOgB,IMhEX+F,KJCyB,WAGN,IAFnB/F,EAEkB,uDAFVR,EACRS,EACkB,uCAClB,OAAQA,EAAOC,MACb,KAAKpB,EAAWoG,mBACd,OAAO,2BACFlF,GACAC,EAAOI,SAGd,QACE,OAAOL,IIZXgG,IFLwB,WAGC,IAFzBhG,EAEwB,uDAFhBR,EACRS,EACwB,uCACxB,OAAQA,EAAOC,MACb,KAAKpB,EAAWuG,oBACd,OAAO,2BACFrF,GADL,IAEEoF,aAAa,IAGjB,QACE,OAAOpF,IENXiG,WAGWC,GAAQC,YAAYb,GAAa7B,GAK9CL,OAAO8C,MAAQA,G,IC1BiBE,G,oECUnBC,GAAoC,SAAC,GAM3C,IALLxC,EAKI,EALJA,SACAyC,EAII,EAJJA,gBAII,IAHJrC,mBAGI,MAHU,EAGV,EAFJsC,EAEI,EAFJA,kBAEI,IADJC,mBACI,MADU,GACV,EACEC,EAAepE,KAAKqE,KAAKJ,EAAkBzC,GAE3C8C,EAAatE,KAAKC,OAAO2B,EAAc,GAAKuC,GAAeA,EAE3DI,EAAQC,MAAML,GACjBM,KAAK,MACLC,QAAO,SAACC,EAAKC,EAAMC,GAClB,IAAMC,EAAUD,EAAM,EAAIP,EAE1B,OAAIQ,GAAWV,EACP,GAAN,mBAAWO,GAAX,CAAgBG,IAGXH,IACN,IAEL,OACE,uBAAKI,UAAWC,KAAEC,UAAlB,UACE,yBACEpH,KAAK,SACLkH,UAAS,UAAKC,KAAEE,KAChBC,SAA0B,IAAhBvD,EACVwD,QAAS,kBAAMlB,EAAkB,IAJnC,mBAQA,yBACErG,KAAK,SACLkH,UAAS,UAAKC,KAAEE,KAChBC,SAA0B,IAAhBvD,EACVwD,QAAS,kBAAMlB,EAAkBtC,EAAc,IAJjD,sBAQC2C,EAAMhB,KAAI,SAACpF,GACV,IAAMkH,EAAYlH,IAAMyD,EAExB,OACE,yBACE/D,KAAK,SAELkH,UAAS,UAAKC,KAAEE,IAAP,YAAcG,GAAaL,KAAEM,UACtCH,SAAUE,EACVD,QAAS,kBAAMlB,EAAkB/F,IALnC,SAOGA,GALIA,MASX,yBACEN,KAAK,SACLkH,UAAS,UAAKC,KAAEE,KAChBC,SAAUvD,IAAgBwC,EAC1BgB,QAAS,kBAAMlB,EAAkBtC,EAAc,IAJjD,kBAQA,yBACE/D,KAAK,SACLkH,UAAS,UAAKC,KAAEE,KAChBC,SAAUvD,IAAgBwC,EAC1BgB,QAAS,kBAAMlB,EAAkBE,IAJnC,sB,8BC7DOmB,GAA2B,SAAC,GAKlC,IAJLC,EAII,EAJJA,KACA1D,EAGI,EAHJA,oBACA2D,EAEI,EAFJA,OACAC,EACI,EADJA,SAEA,OACE,sBAAIX,UAAWC,KAAEJ,KAAjB,UACE,iCACE,sBAAKG,UAAWC,KAAEW,cAAlB,SACE,eAAC,IAAD,CAAMC,GAAE,mBAAcJ,EAAKnI,IAA3B,SACE,sBACE0H,UAAWC,KAAEa,OACbC,IAAKN,EAAKO,OAAOC,MAAQR,EAAKO,OAAOC,MAAQC,KAC7CC,MAAM,KACNC,OAAO,KACPC,IAAI,oBAIV,+BACGZ,EAAK/B,SACJ,yBACEsB,UAAWsB,KAASnB,IACpBrH,KAAK,SACLsH,SAAUrD,EAAoBwE,MAAK,SAACjJ,GAAD,OAAQA,IAAOmI,EAAKnI,MACvD+H,QAAS,WACPM,EAASF,EAAKnI,KALlB,sBAWA,yBACE0H,UAAWsB,KAASnB,IACpBrH,KAAK,SACLsH,SAAUrD,EAAoBwE,MAAK,SAACjJ,GAAD,OAAQA,IAAOmI,EAAKnI,MACvD+H,QAAS,WACPK,EAAOD,EAAKnI,KALhB,yBAaN,uBAAK0H,UAAWC,KAAEuB,KAAlB,UACE,iCACE,sBAAKxB,UAAWC,KAAE3F,KAAlB,SAAyBmG,EAAKnG,OAC9B,sBAAK0F,UAAWC,KAAE/H,OAAlB,SAA2BuI,EAAKvI,QAAU,uBAE5C,uBAAK8H,UAAWC,KAAEwB,SAAlB,UACE,yDACA,gECjDGC,GAA4B,SAACC,GAAW,IAEjDhF,EAQEgF,EARFhF,MACAF,EAOEkF,EAPFlF,SACAG,EAME+E,EANF/E,gBACAJ,EAKEmF,EALFnF,KACAO,EAIE4E,EAJF5E,oBACA2D,EAGEiB,EAHFjB,OACAC,EAEEgB,EAFFhB,SACAxB,EACEwC,EADFxC,kBAGIyC,EAAejF,EAAM6B,KAAI,SAACiC,GAAD,OAC7B,eAAC,GAAD,CAEEA,KAAMA,EACN1D,oBAAqBA,EACrB2D,OAAQA,EACRC,SAAUA,GAJLF,EAAKnI,OAQd,OACE,uBAAK0H,UAAWC,KAAE4B,WAAlB,UACE,eAAC,GAAD,CACEpF,SAAUA,EACVyC,gBAAiBtC,EACjBC,YAAaL,EACb2C,kBAAmBA,IAGrB,qBAAIa,UAAWC,KAAE6B,KAAjB,SAAwBF,IACxB,yBAAQ5B,UAAWsB,KAASnB,IAAKrH,KAAK,SAASuH,QAAS,aAAxD,2B,mBC3CO0B,GAAWC,cAHC,SAACpJ,GAAD,OACvBA,EAAM2F,UAAU5B,SAIhB,SAACA,GAAD,OAA4BA,EAAMxD,QAAO,SAACsF,GAAD,QAASA,QAGvCwD,GAAc,SAACrJ,GAAD,OACzBA,EAAM2F,UAAU9B,UAELyF,GAAqB,SAACtJ,GAAD,OAChCA,EAAM2F,UAAU3B,iBAELuF,GAAiB,SAACvJ,GAAD,OAC5BA,EAAM2F,UAAU1B,aAELuF,GAAgB,SAACxJ,GAAD,OAC3BA,EAAM2F,UAAUzB,YAELuF,GAAyB,SAACzJ,GAAD,OACpCA,EAAM2F,UAAUxB,qBCVVuF,GAAmBC,EAoBrBC,G,4MAMJrD,kBAAoB,SAAC3C,GAAkB,IAAD,EACS,EAAKmF,MAA1ClF,EAD4B,EAC5BA,UACRsF,EAFoC,EAClBU,cACTjG,EAAMC,I,uDAPjB,WAAqB,IAAD,EACiCiG,KAAKf,MAAhDnF,EADU,EACVA,KAAMC,EADI,EACJA,UACdsF,EAFkB,EACMU,cACfjG,EAAMC,K,oBAQjB,WAAuB,IAAD,EAUhBiG,KAAKf,MARPhF,EAFkB,EAElBA,MACAF,EAHkB,EAGlBA,SACAG,EAJkB,EAIlBA,gBACAJ,EALkB,EAKlBA,KACAO,EANkB,EAMlBA,oBACY2D,EAPM,EAOlBiC,WACchC,EARI,EAQlBiC,aACA9F,EATkB,EASlBA,WAGF,OACE,qCACGA,EACC,eAAC+F,GAAA,EAAD,CAAWpJ,KAAK,eAEhB,eAAC,GAAD,CACEkD,MAAOA,EACPF,SAAUA,EACVG,gBAAiBA,EACjBJ,KAAMA,EACNO,oBAAqBA,EACrB2D,OAAQA,EACRC,SAAUA,EACVxB,kBAAmBuD,KAAKvD,0B,GApCJ2D,aAuDnBC,GAAiB7G,YAC5B8G,aAZsB,SAACpK,GACvB,MAAO,CACL+D,MAAOsG,GAAwBrK,GAC/B6D,SAAUwG,GAA2BrK,GACrCgE,gBAAiBqG,GAAkCrK,GACnD4D,KAAMyG,GAA8BrK,GACpCkE,WAAYmG,GAA6BrK,GACzCmE,oBAAqBkG,GAAsCrK,MAKpC,CACvB+J,WZsCsB,SAAC/K,GAAD,8CAA+B,WAAOkC,GAAP,SAAAC,EAAA,6DACvDD,EAASP,GAAgC,EAAM3B,IADQ,SAGpC2E,EAAgB3E,GAHoB,cAK9CsC,aAAeC,IAAWC,SACjCN,EAASP,EAAe3B,IAE1BkC,EAASP,GAAgC,EAAO3B,IARO,2CAA/B,uDYrCtBgL,aZgDwB,SAAChL,GAAD,8CAA+B,WAAOkC,GAAP,SAAAC,EAAA,6DACzDD,EAASP,GAAgC,EAAM3B,IADU,SAGtC2E,EAAkB3E,GAHoB,cAKhDsC,aAAeC,IAAWC,SACjCN,EAASP,EAAiB3B,IAE5BkC,EAASP,GAAgC,EAAO3B,IARS,2CAA/B,uDY/CxB0K,kBACAG,aZqBwB,SAC1BjG,EACAC,GAF0B,8CAGZ,WAAO3C,GAAP,eAAAC,EAAA,6DACdD,EAASP,GAAyB,IAClCO,EAASP,EAAuBiD,IAFlB,SAIKD,EAAkBC,EAAMC,GAJ7B,OAIRxE,EAJQ,OAMd6B,EAASP,GAAyB,IAClCO,EAASP,EAAiBtB,EAAKiL,QAC/BpJ,EAASP,EAA2BtB,EAAKmF,aAR3B,2CAHY,yDY1BElB,CAO5BsG,I,oBClGa,OAA0B,iCCa5BW,GAA8B,SAAC,GAA+B,IAA7BvF,EAA4B,EAA5BA,MAAOwF,EAAqB,EAArBA,OAAQvF,EAAa,EAAbA,OAC3D,OACE,0BAAQmC,UAAWC,KAAEoD,OAArB,UACE,sBAAKrD,UAAWC,KAAEqD,KAAMvC,IAAKuC,GAAMnC,MAAM,KAAKC,OAAO,KAAKC,IAAI,SAC9D,sBAAKrB,UAAWC,KAAEsD,WAAlB,SACG1F,EACC,iCACE,uBAAMmC,UAAWC,KAAErC,MAAnB,SAA2BA,IAC3B,yBAAQ9E,KAAK,SAASkH,UAAWsB,KAASnB,IAAKE,QAAS+C,EAAxD,wBAKF,eAAC,IAAD,CAAMpD,UAAWsB,KAASnB,IAAKU,GAAG,SAAlC,0BCNJ2C,G,4JACJ,WAAuB,IAAD,EAC8Bd,KAAKf,MAA/C/D,EADY,EACZA,MAAe6F,EADH,EACLL,OAAwBvF,EADnB,EACmBA,OAEvC,OAAO,eAAC,GAAD,CAAQD,MAAOA,EAAOwF,OAAQK,EAAgB5F,OAAQA,Q,GAJhCiF,aAcpBY,GAAkBV,aANP,SAAC,GAEY,IAAD,IADlCrE,KAEA,MAAO,CAAEf,MADyB,EAD1BA,MAEQC,OADkB,EADnBA,UAUE,CAAEuF,ObmCC,yDAAiB,WAAOtJ,GAAP,SAAAC,EAAA,sEAClByD,IADkB,cAG5BtD,aAAeC,IAAWC,SACjCN,EAASP,EAAwB,KAAM,KAAM,MAAM,IAJhB,2CAAjB,wDaxCSyJ,CAKAQ,I,oBClClBG,GAAa,WACxB,OACE,sBAAK3D,UAAWC,KAAE2D,IAAlB,SACE,sBAAI5D,UAAWC,KAAE6B,KAAjB,UACE,qBAAI9B,UAAWC,KAAEJ,KAAjB,SACE,eAAC,IAAD,CAASG,UAAWC,KAAE4D,KAAMhD,GAAG,WAAWiD,gBAAiB7D,KAAE8D,OAA7D,uBAIF,qBAAI/D,UAAWC,KAAEJ,KAAjB,SACE,eAAC,IAAD,CAASG,UAAWC,KAAE4D,KAAMhD,GAAG,WAAWiD,gBAAiB7D,KAAE8D,OAA7D,wBAIF,qBAAI/D,UAAWC,KAAEJ,KAAjB,SACE,eAAC,IAAD,CAASG,UAAWC,KAAE4D,KAAMhD,GAAG,SAASiD,gBAAiB7D,KAAE8D,OAA3D,2B,0DCPJC,GAAcC,aAAiB,IAqD/BC,GAAiBC,aAA6B,CAClDtF,KAAM,SADesF,EA7CqC,SAAC,GAGtD,IAFLC,EAEI,EAFJA,aACArI,EACI,EADJA,MAEA,OACE,wBAAMiE,UAAWC,KAAEpB,KAAMwF,SAAUD,EAAnC,UACE,eAACE,GAAA,EAAD,CACEC,UAAWC,KACXlK,KAAK,QACLmK,YAAY,QACZC,SAAU,CAACC,KAAUX,MAGvB,eAACM,GAAA,EAAD,CACEC,UAAWC,KACX1L,KAAK,WACLwB,KAAK,WACLmK,YAAY,WACZC,SAAU,CAACC,KAAUX,MAIvB,yBAAOhE,UAAS,UAAKC,KAAE2E,iBAAvB,UACE,eAACN,GAAA,EAAD,CACEtE,UAAWC,KAAE4E,SACbN,UAAU,QACVzL,KAAK,WACLwB,KAAK,eAEP,uBAAM0F,UAAWC,KAAE6E,KAAnB,4BAGF,sBAAK9E,UAAS,UAAKC,KAAE8E,cAArB,SACGhJ,GAAS,uBAAMiE,UAAS,UAAKC,KAAElE,OAAtB,SAAgCA,MAG5C,sBAAKiE,UAAS,UAAKC,KAAE+E,YAArB,SACE,yBAAQlM,KAAK,SAASkH,UAAWsB,KAASnB,IAA1C,4BAiDK8E,GAAYjC,aARD,SAAC,GAGvB,MAAO,CACLnF,OAFgC,EADlCc,KAAQd,UAYS,CAAED,MfpDA,SAACsH,GAAD,8CAAyC,WAC5DpL,GAD4D,iBAAAC,EAAA,sEAGzCyD,EAAc0H,GAH2B,WAGtDjN,EAHsD,QAKnDiC,aAAeC,IAAWC,QALyB,gCAMpDN,EAASiE,KAN2C,8BAQpDvF,EAAUP,EAAKsC,SAAS4K,OAASlN,EAAKsC,SAAS,GAAK,aAE1DT,EAASsL,YAAW,QAAS,CAAEC,OAAQ7M,KAVmB,4CAAzC,wDe+CIwK,EA7B6B,SAAC,GAGhD,IAFEsC,EAEH,EAFJ1H,MAOA,OALI,EADJC,OAMmB,eAAC,IAAD,CAAUgD,GAAG,aAG9B,iCACE,qBAAIb,UAAWC,KAAErE,MAAjB,mBAEA,sBAAKoE,UAAWC,KAAEsF,iBAAlB,SACE,eAACrB,GAAD,CAAgBG,SAXA,SAACmB,GACrBF,EAAc,eAAKE,e,oBChFVC,GAAe,WAC1B,OACE,sBAAKzF,UAAWC,KAAEzD,KAAlB,SACE,uBAAKwD,UAAWC,KAAEyF,KAAlB,UACE,qBAAI1F,UAAWC,KAAErE,MAAjB,gCACA,qBAAGoE,UAAWC,KAAExG,KAAhB,mBACG,2CADH,IACuB,0DADvB,kBCaFkM,GAAmBC,eAAI,sBAAC,4BAAA7L,EAAA,sEACP,8BADO,cACtBsB,EADsB,yBAErB,CAAEwK,QAASxK,EAAOsK,mBAFG,4CAIxBG,GAAmBF,eAAI,sBAAC,4BAAA7L,EAAA,sEACP,8BADO,cACtBsB,EADsB,yBAErB,CAAEwK,QAASxK,EAAOyK,mBAFG,4CAexBC,G,uKACJ,WACErD,KAAKf,MAAMqE,kB,oBAGb,WACE,OAAKtD,KAAKf,MAAM3D,YASd,uBAAKgC,UAAWC,IAAEgG,WAAlB,UACE,eAACvC,GAAD,IACA,eAAC,GAAD,IAEA,uBAAM1D,UAAWC,IAAEiG,kBAAnB,SACE,eAAC,WAAD,CACEC,SACE,sBAAKnG,UAAWC,IAAEmG,qBAAlB,SACE,eAACvD,GAAA,EAAD,CAAWpJ,KAAK,iBAHtB,SAOE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAO4M,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,eAAC,IAAD,CAAU1F,GAAG,gBACjD,eAAC,IAAD,CACEyF,KAAK,oBACLC,OAAQ,kBAAM,eAACT,GAAD,OAEhB,eAAC,IAAD,CAAOQ,KAAK,WAAWC,OAAQ,kBAAM,eAACZ,GAAD,OACrC,eAAC,IAAD,CAAOW,KAAK,SAASC,OAAQ,kBAAM,eAACxD,GAAD,OACnC,eAAC,IAAD,CAAOuD,KAAK,SAASC,OAAQ,kBAAM,eAACtB,GAAD,OACnC,eAAC,IAAD,CAAOqB,KAAK,OAAOC,OAAQ,kBAAM,eAAC,GAAD,OACjC,eAAC,IAAD,CAAOD,KAAK,IAAIC,OAAQ,kBAAM,eAAC,IAAD,CAAU1F,GAAG,sBA7BjD,sBAAKb,UAAWC,IAAEuG,oBAAlB,SACE,eAAC3D,GAAA,EAAD,CAAWpJ,KAAK,+B,GATRqJ,aAsDZ2D,GAAevK,YACnB8G,aATsB,SAAC,GAGvB,MAAO,CACLhF,YAFgC,EADlCY,IAAOZ,eAQkB,CAAEgI,cfxDA,yDAAiB,WAAOlM,GAAP,eAAAC,EAAA,sEACVD,EAASiE,KADC,OACtC2I,EADsC,OAG5CC,QAAQC,IAAI,CAACF,IAAsB3O,MAAK,WACtC+B,EAASP,QAJiC,2CAAjB,yDeyD3BsN,IAFmB3K,CAGnB6J,IAEWe,GAAmB,WAC9B,OACE,eAAC,IAAD,CAAUhI,MAAOA,GAAjB,SACE,eAAC,IAAD,UACE,eAAC2H,GAAD,SCjGRM,IAASR,OAAO,eAAC,GAAD,IAAkBS,SAASC,eAAe,SbHpDjI,IAAeA,cAAuBkI,UACxC,8BAAqBnP,MAAK,YAAkD,IAA/CoP,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOnI,IACPoI,EAAOpI,IACPqI,EAAOrI,IACPsI,EAAOtI,IACPuI,EAAQvI,Q,mBcRd3D,EAAOC,QAAU,CAAC,IAAM,uBAAuB,SAAW,8B,mBCA1DD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,cAAgB,4BAA4B,OAAS,qBAAqB,KAAO,mBAAmB,SAAW,yB,gCCD3J,mEAQauH,EAAoC,SAAC,GAAc,IAAZpJ,EAAW,EAAXA,KAClD,OACE,sBAAKuG,UAAWC,IAAEuH,UAAlB,UACE,qBAAKxH,UAAWC,IAAEwH,eAClB,qBAAKzH,UAAWC,IAAEyH,aAAlB,SAAiCjO,S,mBCXvC4B,EAAOC,QAAU,CAAC,WAAa,wBAAwB,kBAAoB,+BAA+B,oBAAsB,iCAAiC,qBAAuB,oC,mBCAxLD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,MAAQ,wB,mBCAtFD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,MAAQ,wBAAwB,KAAO,yB,gCCCvF,oEAAO,IAAMqJ,EAA+B,SAACgD,GAC3C,OAAOA,OAAQC,EAAY,qBAGhB3D,EAAmB,SAAC4D,GAAD,OAA2C,SACzEF,GAEA,OAAOA,GAASA,EAAMxC,OAAS0C,EAAxB,wBACcA,EADd,iBAEHD,K,mBCVNvM,EAAOC,QAAU,CAAC,UAAY,6BAA6B,aAAe,gCAAgC,KAAO,wBAAwB,aAAe,gCAAgC,MAAQ,2B,mBCAhMD,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,sJCS9GwM,EAAwC,SAAC,GAI/C,IAAD,IAHJC,KAAQC,EAGJ,EAHIA,QAASjM,EAGb,EAHaA,MACjBkM,EAEI,EAFJA,SAEI,IADJjI,iBACI,MADQ,GACR,EACEkI,EAAWF,GAAWjM,EAEtBoM,EAAoB,UAAMlI,IAAEmI,YAAR,YAAuBpI,EAAvB,YACxBkI,GAAYjI,IAAEoI,kBAGhB,OACE,sBAAKrI,UAAWmI,EAAhB,UACGD,GAAY,sBAAMlI,UAAS,UAAKC,IAAElE,OAAtB,SAAgCA,IAE5CkM,MAKMK,EAAkC,SAAC3G,GAAW,IACjD4G,EAA8B5G,EAA9B4G,MAAgBC,GAAc7G,EAAvBoG,KADyC,YAClBpG,EADkB,mBAGxD,OACE,cAACmG,EAAD,2BAAiBnG,GAAjB,aACE,kDAAU8C,YAAY,iBAAoB8D,GAAWC,QAK9ChE,EAA+B,SAAC7C,GAAW,IAC9C4G,EAA8B5G,EAA9B4G,MAAgBC,GAAc7G,EAAvBoG,KADsC,YACfpG,EADe,mBAGrD,OACE,cAACmG,EAAD,2BAAiBnG,GAAjB,aACE,+CACE7I,KAAK,OACL2L,YAAY,iBACR8D,GACAC,S,mBChDZnN,EAAOC,QAAU,CAAC,WAAa,0BAA0B,KAAO,uB","file":"static/js/main.f00da5d2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/userAvatar.3b076f75.svg\";","import { Action } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nimport { randomId } from '../utils/randomId';\nimport { profileApi } from '../api/profileApi';\nimport { InferActionsType, PostType, ProfileType } from '../types/types';\nimport { ResultCode } from '../api/api';\n\nexport enum ActionType {\n  ADD_POST = 'SN/PROFILE/ADD_POST',\n  DELETE_POST = 'SN/PROFILE/DELETE_POST',\n  SET_USER_PROFILE = 'SN/PROFILE/SET_USER_PROFILE',\n  SET_STATUS = 'SN/PROFILE/SET_STATUS',\n}\n\nconst initialState = {\n  posts: [\n    {\n      id: randomId(),\n      message: 'Hi, dude!',\n      likesCount: 12,\n    },\n    {\n      id: randomId(),\n      message: 'yo bro',\n      likesCount: 8,\n    },\n    {\n      id: randomId(),\n      message: 'wazzup',\n      likesCount: 111,\n    },\n  ] as Array<PostType>,\n  profile: null as ProfileType | null,\n  status: '',\n};\n\nexport const profileReducer = (\n  state = initialState,\n  action: ProfilePageActionsType,\n): ProfilePageStateType => {\n  switch (action.type) {\n    case ActionType.ADD_POST: {\n      const post: PostType = {\n        id: randomId(),\n        message: action.payload,\n        likesCount: 0,\n      };\n\n      return { ...state, posts: [...state.posts, post] };\n    }\n\n    case ActionType.DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((p) => p.id !== action.payload),\n      };\n\n    case ActionType.SET_USER_PROFILE:\n      return { ...state, profile: action.payload };\n\n    case ActionType.SET_STATUS:\n      return { ...state, status: action.payload };\n\n    default:\n      return state;\n  }\n};\n\n/** Actions */\nexport const actions = {\n  addPost: (text: string) =>\n    ({ type: ActionType.ADD_POST, payload: text } as const),\n\n  deletePost: (id: string) =>\n    ({ type: ActionType.DELETE_POST, payload: id } as const),\n\n  setUserProfile: (profile: ProfileType) =>\n    ({ type: ActionType.SET_USER_PROFILE, payload: profile } as const),\n\n  setStatus: (status: string) =>\n    ({ type: ActionType.SET_STATUS, payload: status } as const),\n};\n\n/** Thunks */\nexport const getProfile = (userId: number): ThunkType => async (dispatch) => {\n  const data = await profileApi.getProfile(userId);\n\n  dispatch(actions.setUserProfile(data));\n};\n\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\n  const data = await profileApi.getStatus(userId);\n\n  dispatch(actions.setStatus(data));\n};\n\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\n  const data = await profileApi.updateStatus(status);\n\n  if (data.resultCode === ResultCode.Success) {\n    dispatch(actions.setStatus(status));\n  }\n};\n\n/** Types */\nexport type ProfilePageStateType = typeof initialState;\n\nexport type ProfilePageActionsType = InferActionsType<typeof actions>;\n\ntype ThunkType<\n  A extends Action = ProfilePageActionsType,\n  R = Promise<void>,\n  S = { profilePage: ProfilePageStateType }\n> = ThunkAction<R, S, unknown, A>;\n","import { API, ApiResponseType } from './api';\nimport { ProfileType } from '../types/types';\n\nexport const profileApi = {\n  getProfile(userId: number): Promise<ProfileType> {\n    return API.get<ProfileType>(`profile/${userId}`).then((res) => res.data);\n  },\n  getStatus(userId: number): Promise<string> {\n    return API.get<string>(`profile/status/${userId}`).then((res) => res.data);\n  },\n  updateStatus(status: string): Promise<ApiResponseType> {\n    return API.put<ApiResponseType>(`profile/status/`, { status }).then(\n      (res) => res.data,\n    );\n  },\n};\n","import { randomId } from '../utils/randomId';\nimport { DialogItemType, InferActionsType, MessageType } from '../types/types';\n\nexport enum ActionType {\n  SEND_MESSAGE = 'SN/DIALOGS/SEND_MESSAGE',\n}\n\nconst initialState = {\n  dialogs: [\n    {\n      id: randomId(),\n      name: 'Andrei',\n    },\n    {\n      id: randomId(),\n      name: 'John Doe',\n    },\n    {\n      id: randomId(),\n      name: 'Patrick',\n    },\n    {\n      id: randomId(),\n      name: 'Someone',\n    },\n  ] as Array<DialogItemType>,\n  messages: [\n    {\n      id: randomId(),\n      message: 'Hi',\n    },\n    {\n      id: randomId(),\n      message: 'Hi, dude!',\n    },\n    {\n      id: randomId(),\n      message: 'Yo',\n    },\n  ] as Array<MessageType>,\n};\n\nexport const dialogsReducer = (\n  state = initialState,\n  action: DialogsPageActionsType,\n): DialogsPageStateType => {\n  switch (action.type) {\n    case ActionType.SEND_MESSAGE: {\n      const message: MessageType = {\n        id: randomId(),\n        message: action.payload,\n      };\n\n      return {\n        ...state,\n        messages: [...state.messages, message],\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\n/** Actions */\nexport const actions = {\n  sendMessage: (message: string) =>\n    ({ type: ActionType.SEND_MESSAGE, payload: message } as const),\n};\n\n/** Types */\nexport type DialogsPageStateType = typeof initialState;\n\nexport type DialogsPageActionsType = InferActionsType<typeof actions>;\n","import axios from 'axios';\nimport { UserType } from '../types/types';\n\nexport type UsersResponseType = {\n  items: Array<UserType>;\n  totalCount: number;\n  error: string | null;\n};\n\nexport enum ResultCode {\n  Success = 0,\n  Error = 1,\n}\n\nexport type ApiResponseType<D = Record<string, unknown>> = {\n  resultCode: ResultCode;\n  messages: Array<string>;\n  data: D;\n};\n\nexport const API = axios.create({\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  withCredentials: true,\n  headers: {\n    'API-KEY': process.env.REACT_APP_API_KEY,\n  },\n});\n","export const randomId = (): string =>\n  Math.floor(Math.random() * 1e9).toString(16);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"list\":\"Navbar_list__2GzPV\",\"link\":\"Navbar_link__TNvz9\",\"active\":\"Navbar_active__3mbhk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3ORHN\",\"back-pulse\":\"Button_back-pulse__1fInM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__2mvFD\",\"title\":\"Login_title__bh47u\",\"checkboxWrapper\":\"Login_checkboxWrapper__7_o-w\",\"btnWrapper\":\"Login_btnWrapper__2bwwv\",\"checkbox\":\"Login_checkbox__3UFrU\",\"hint\":\"Login_hint__3ofnl\",\"errorWrapper\":\"Login_errorWrapper__3WLZ5\",\"error\":\"Login_error__17Wu6\"};","import { applyMiddleware, compose, Middleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\n\nconst DEV = process.env.NODE_ENV !== 'production';\n\nconst logger = createLogger({\n  duration: true,\n  collapsed: true,\n  colors: {\n    title: () => '#139BFE',\n    prevState: () => '#1C5FAF',\n    action: () => '#149945',\n    nextState: () => '#A47104',\n    error: () => '#FF0005',\n  },\n});\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore next line\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst composeEnhancers = DEV && devtools ? devtools : compose;\n\nconst middleware: Array<Middleware> = [thunk];\n\nif (DEV) middleware.push(logger);\n\nexport const enhancedStore = composeEnhancers(applyMiddleware(...middleware));\n","import { Action } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nimport { usersApi } from '../api/usersApi';\nimport { InferActionsType, UserType } from '../types/types';\nimport { ResultCode } from '../api/api';\n\nexport enum ActionType {\n  FOLLOW = 'SN/USERS/FOLLOW',\n  UNFOLLOW = 'SN/USERS/UNFOLLOW',\n  SET_USERS = 'SN/USERS/SET_USERS',\n  SET_CURRENT_PAGE = 'SN/USERS/SET_CURRENT_PAGE',\n  SET_USERS_TOTAL_COUNT = 'SN/USERS/SET_USERS_TOTAL_COUNT',\n  TOGGLE_IS_FETCHING = 'SN/USERS/TOGGLE_IS_FETCHING',\n  TOGGLE_IS_FOLLOWING_PROGRESS = 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS',\n}\n\nconst initialState = {\n  users: [] as Array<UserType>,\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: [] as Array<number>,\n};\n\nexport const usersReducer = (\n  state = initialState,\n  action: UsersPageActionsType,\n): UsersPageStateType => {\n  switch (action.type) {\n    case ActionType.FOLLOW:\n      return {\n        ...state,\n        users: state.users.map((u) =>\n          u.id === action.payload ? { ...u, followed: true } : u,\n        ),\n      };\n\n    case ActionType.UNFOLLOW:\n      return {\n        ...state,\n        users: state.users.map((u) =>\n          u.id === action.payload ? { ...u, followed: false } : u,\n        ),\n      };\n\n    case ActionType.SET_USERS:\n      return {\n        ...state,\n        users: action.payload,\n      };\n\n    case ActionType.SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.payload,\n      };\n\n    case ActionType.SET_USERS_TOTAL_COUNT:\n      return {\n        ...state,\n        totalUsersCount: action.payload,\n      };\n\n    case ActionType.TOGGLE_IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.payload,\n      };\n\n    case ActionType.TOGGLE_IS_FOLLOWING_PROGRESS:\n      return {\n        ...state,\n        followingInProgress: action.payload.isFetching\n          ? [...state.followingInProgress, action.payload.userId]\n          : state.followingInProgress.filter(\n              (id) => id !== action.payload.userId,\n            ),\n      };\n\n    default:\n      return state;\n  }\n};\n\n/** Actions */\nexport const actions = {\n  follow: (userId: number) =>\n    ({ type: ActionType.FOLLOW, payload: userId } as const),\n\n  unfollow: (userId: number) =>\n    ({ type: ActionType.UNFOLLOW, payload: userId } as const),\n\n  setUsers: (users: Array<UserType>) =>\n    ({ type: ActionType.SET_USERS, payload: users } as const),\n\n  setCurrentPage: (page: number) =>\n    ({ type: ActionType.SET_CURRENT_PAGE, payload: page } as const),\n\n  setUsersTotalCount: (totalCount: number) =>\n    ({ type: ActionType.SET_USERS_TOTAL_COUNT, payload: totalCount } as const),\n\n  toggleIsFetching: (isFetching: boolean) =>\n    ({ type: ActionType.TOGGLE_IS_FETCHING, payload: isFetching } as const),\n\n  toggleFollowingProgress: (isFetching: boolean, userId: number) =>\n    ({\n      type: ActionType.TOGGLE_IS_FOLLOWING_PROGRESS,\n      payload: {\n        isFetching,\n        userId,\n      },\n    } as const),\n};\n\n/** Thunks */\nexport const requestUsers = (\n  page: number,\n  pageSize: number,\n): ThunkType => async (dispatch) => {\n  dispatch(actions.toggleIsFetching(true));\n  dispatch(actions.setCurrentPage(page));\n\n  const data = await usersApi.getUsers(page, pageSize);\n\n  dispatch(actions.toggleIsFetching(false));\n  dispatch(actions.setUsers(data.items));\n  dispatch(actions.setUsersTotalCount(data.totalCount));\n};\n\nexport const followUser = (userId: number): ThunkType => async (dispatch) => {\n  dispatch(actions.toggleFollowingProgress(true, userId));\n\n  const data = await usersApi.follow(userId);\n\n  if (data.resultCode === ResultCode.Success) {\n    dispatch(actions.follow(userId));\n  }\n  dispatch(actions.toggleFollowingProgress(false, userId));\n};\n\nexport const unfollowUser = (userId: number): ThunkType => async (dispatch) => {\n  dispatch(actions.toggleFollowingProgress(true, userId));\n\n  const data = await usersApi.unfollow(userId);\n\n  if (data.resultCode === ResultCode.Success) {\n    dispatch(actions.unfollow(userId));\n  }\n  dispatch(actions.toggleFollowingProgress(false, userId));\n};\n\n/** Types */\nexport type UsersPageStateType = typeof initialState;\n\nexport type UsersPageActionsType = InferActionsType<typeof actions>;\n\ntype ThunkType<\n  A extends Action = UsersPageActionsType,\n  R = Promise<void>,\n  S = { usersPage: UsersPageStateType }\n> = ThunkAction<R, S, unknown, A>;\n","import { API, ApiResponseType, UsersResponseType } from './api';\n\nexport const usersApi = {\n  getUsers(page = 1, pageSize = 5): Promise<UsersResponseType> {\n    return API.get<UsersResponseType>(\n      `users?page=${page}&count=${pageSize}`,\n    ).then((res) => res.data);\n  },\n\n  follow(userId: number): Promise<ApiResponseType> {\n    return API.post<ApiResponseType>(`follow/${userId}`).then(\n      (res) => res.data,\n    );\n  },\n\n  unfollow(userId: number): Promise<ApiResponseType> {\n    return API.delete<ApiResponseType>(`follow/${userId}`).then(\n      (res) => res.data,\n    );\n  },\n};\n","import { Action } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { FormAction, stopSubmit } from 'redux-form';\n\nimport { authApi, LoginDataType } from '../api/authApi';\nimport { ResultCode } from '../api/api';\nimport { InferActionsType } from '../types/types';\n\nexport enum ActionType {\n  SET_AUTH_USER_DATA = 'SN/AUTH/SET_AUTH_USER_DATA',\n}\n\nconst initialState = {\n  id: null as number | null,\n  email: null as string | null,\n  login: null as string | null,\n  isAuth: false,\n};\n\nexport const authReducer = (\n  state = initialState,\n  action: AuthActionsType,\n): AuthStateType => {\n  switch (action.type) {\n    case ActionType.SET_AUTH_USER_DATA:\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\n/** Actions */\nexport const actions = {\n  setAuthUserData: (\n    id: number | null,\n    email: string | null,\n    login: string | null,\n    isAuth: boolean,\n  ) =>\n    ({\n      type: ActionType.SET_AUTH_USER_DATA,\n      payload: { id, email, login, isAuth },\n    } as const),\n};\n\n/** Thunks */\nexport const getAuthUserData = (): ThunkType => async (dispatch) => {\n  const data = await authApi.me();\n\n  if (data.resultCode === ResultCode.Success) {\n    const { id, email, login } = data.data;\n\n    dispatch(actions.setAuthUserData(id, email, login, true));\n  }\n};\n\nexport const login = (loginData: LoginDataType): ThunkType => async (\n  dispatch,\n) => {\n  const data = await authApi.login(loginData);\n\n  if (data.resultCode === ResultCode.Success) {\n    await dispatch(getAuthUserData());\n  } else {\n    const message = data.messages.length ? data.messages[0] : 'Some error';\n\n    dispatch(stopSubmit('login', { _error: message }));\n  }\n};\n\nexport const logout = (): ThunkType => async (dispatch) => {\n  const data = await authApi.logout();\n\n  if (data.resultCode === ResultCode.Success) {\n    dispatch(actions.setAuthUserData(null, null, null, false));\n  }\n};\n\n/** Types */\nexport type AuthStateType = typeof initialState;\n\nexport type AuthActionsType = InferActionsType<typeof actions>;\n\ntype ThunkType<\n  A extends Action = AuthActionsType | FormAction,\n  R = Promise<void>,\n  S = { auth: AuthStateType }\n> = ThunkAction<R, S, unknown, A>;\n","import { API, ApiResponseType } from './api';\n\ntype MeResponseDataType = {\n  id: number;\n  email: string;\n  login: string;\n};\n\ntype LoginResponseDataType = {\n  userId: number;\n};\n\nexport type LoginDataType = {\n  email: string;\n  password: string;\n  rememberMe?: boolean;\n  captcha?: null | string;\n};\n\nexport const authApi = {\n  me(): Promise<ApiResponseType<MeResponseDataType>> {\n    return API.get<ApiResponseType<MeResponseDataType>>(`auth/me`).then(\n      (res) => res.data,\n    );\n  },\n  login({\n    email,\n    password,\n    rememberMe = false,\n  }: LoginDataType): Promise<ApiResponseType<LoginResponseDataType>> {\n    return API.post<ApiResponseType<LoginResponseDataType>>(`auth/login`, {\n      email,\n      password,\n      rememberMe,\n    }).then((res) => res.data);\n  },\n  logout(): Promise<ApiResponseType> {\n    return API.delete<ApiResponseType>(`auth/login`).then((res) => res.data);\n  },\n};\n","import { Action } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nimport { AuthStateType, getAuthUserData } from './authReducer';\nimport { InferActionsType } from '../types/types';\n\nexport enum ActionType {\n  INITIALIZED_SUCCESS = 'SN/APP/INITIALIZED_SUCCESS',\n}\n\nconst initialState = {\n  initialized: false,\n};\n\nexport const appReducer = (\n  state = initialState,\n  action: AppActionsType,\n): AppInitialStateType => {\n  switch (action.type) {\n    case ActionType.INITIALIZED_SUCCESS:\n      return {\n        ...state,\n        initialized: true,\n      };\n\n    default:\n      return state;\n  }\n};\n\n/** Actions */\nexport const actions = {\n  initializedSuccess: () =>\n    ({\n      type: ActionType.INITIALIZED_SUCCESS,\n    } as const),\n};\n\n/** Thunks */\nexport const initializeApp = (): ThunkType => async (dispatch) => {\n  const AuthUserDataPromise = await dispatch(getAuthUserData());\n\n  Promise.all([AuthUserDataPromise]).then(() => {\n    dispatch(actions.initializedSuccess());\n  });\n};\n\n/** Types */\nexport type AppInitialStateType = typeof initialState;\n\nexport type AppActionsType = InferActionsType<typeof actions>;\n\ntype ThunkType<\n  A extends Action = AppActionsType,\n  R = Promise<void>,\n  S = { app: AppInitialStateType; auth: AuthStateType }\n> = ThunkAction<R, S, unknown, A>;\n","const initialState = {};\n\nexport type SidebarType = typeof initialState;\n\nexport const sidebarReducer = (\n  state = initialState,\n  action: SidebarActionTypes,\n): SidebarType => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\ntype SidebarActionTypes = { type: 'TYPE' };\n","import { combineReducers, createStore } from 'redux';\nimport { reducer as form } from 'redux-form';\n\nimport { enhancedStore } from './middleware';\nimport { dialogsReducer as dialogsPage } from './dialogsReducer';\nimport { profileReducer as profilePage } from './profileReducer';\nimport { usersReducer as usersPage } from './usersReducer';\nimport { authReducer as auth } from './authReducer';\nimport { appReducer as app } from './appReducer';\nimport { sidebarReducer as sidebar } from './sidebarReducer';\n\nexport type AppStateType = ReturnType<typeof rootReducer>;\n\nconst rootReducer = combineReducers({\n  profilePage,\n  dialogsPage,\n  sidebar,\n  usersPage,\n  auth,\n  app,\n  form,\n});\n\nexport const store = createStore(rootReducer, enhancedStore);\n\n// FIXME remove global __store__\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore next line\nwindow.store = store;\n","import { ReportHandler } from 'web-vitals';\n\nexport const reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n","import React, { FC } from 'react';\n\nimport s from './Paginator.module.css';\n\ntype PaginatorPropsType = {\n  pageSize: number;\n  totalItemsCount: number;\n  currentPage?: number;\n  changePageHandler: (page: number) => void;\n  portionSize?: number;\n};\n\nexport const Paginator: FC<PaginatorPropsType> = ({\n  pageSize,\n  totalItemsCount,\n  currentPage = 1,\n  changePageHandler,\n  portionSize = 10,\n}) => {\n  const portionCount = Math.ceil(totalItemsCount / pageSize);\n\n  const startIndex = Math.floor((currentPage - 1) / portionSize) * portionSize;\n\n  const pages = Array(portionSize)\n    .fill(null)\n    .reduce((acc, item, idx) => {\n      const current = idx + 1 + startIndex;\n\n      if (current <= portionCount) {\n        return [...acc, current];\n      }\n\n      return acc;\n    }, []);\n\n  return (\n    <div className={s.paginator}>\n      <button\n        type=\"button\"\n        className={`${s.btn}`}\n        disabled={currentPage === 1}\n        onClick={() => changePageHandler(1)}\n      >\n        First\n      </button>\n      <button\n        type=\"button\"\n        className={`${s.btn}`}\n        disabled={currentPage === 1}\n        onClick={() => changePageHandler(currentPage - 1)}\n      >\n        Previous\n      </button>\n      {pages.map((p: number) => {\n        const isCurrent = p === currentPage;\n\n        return (\n          <button\n            type=\"button\"\n            key={p}\n            className={`${s.btn} ${isCurrent && s.selected}`}\n            disabled={isCurrent}\n            onClick={() => changePageHandler(p)}\n          >\n            {p}\n          </button>\n        );\n      })}\n      <button\n        type=\"button\"\n        className={`${s.btn}`}\n        disabled={currentPage === portionCount}\n        onClick={() => changePageHandler(currentPage + 1)}\n      >\n        Next\n      </button>\n      <button\n        type=\"button\"\n        className={`${s.btn}`}\n        disabled={currentPage === portionCount}\n        onClick={() => changePageHandler(portionCount)}\n      >\n        Last\n      </button>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport s from './User.module.css';\nimport userAvatar from '../../../assets/images/userAvatar.svg';\nimport styleBtn from '../../common/styles/Button.module.css';\nimport { UserType } from '../../../types/types';\n\ntype UsersPropsType = {\n  user: UserType;\n  followingInProgress: Array<number>;\n  follow: (userId: number) => void;\n  unfollow: (userId: number) => void;\n};\n\nexport const User: FC<UsersPropsType> = ({\n  user,\n  followingInProgress,\n  follow,\n  unfollow,\n}) => {\n  return (\n    <li className={s.item}>\n      <div>\n        <div className={s.avatarWrapper}>\n          <Link to={`/profile/${user.id}`}>\n            <img\n              className={s.avatar}\n              src={user.photos.small ? user.photos.small : userAvatar}\n              width=\"50\"\n              height=\"50\"\n              alt=\"User avatar\"\n            />\n          </Link>\n        </div>\n        <div>\n          {user.followed ? (\n            <button\n              className={styleBtn.btn}\n              type=\"button\"\n              disabled={followingInProgress.some((id) => id === user.id)}\n              onClick={() => {\n                unfollow(user.id);\n              }}\n            >\n              Unfollow\n            </button>\n          ) : (\n            <button\n              className={styleBtn.btn}\n              type=\"button\"\n              disabled={followingInProgress.some((id) => id === user.id)}\n              onClick={() => {\n                follow(user.id);\n              }}\n            >\n              Follow\n            </button>\n          )}\n        </div>\n      </div>\n      <div className={s.info}>\n        <div>\n          <div className={s.name}>{user.name}</div>\n          <div className={s.status}>{user.status || 'Status is empty'}</div>\n        </div>\n        <div className={s.location}>\n          <div>user.location.country</div>\n          <div>user.location.city</div>\n        </div>\n      </div>\n    </li>\n  );\n};\n","import React, { FC } from 'react';\n\nimport s from './Users.module.css';\nimport styleBtn from '../common/styles/Button.module.css';\nimport { UserType } from '../../types/types';\nimport { Paginator } from '../common/Paginator/Paginator';\nimport { User } from './User/User';\n\ntype UsersPropsType = {\n  users: Array<UserType>;\n  pageSize: number;\n  totalUsersCount: number;\n  page: number;\n  followingInProgress: Array<number>;\n  follow: (userId: number) => void;\n  unfollow: (userId: number) => void;\n  changePageHandler: (page: number) => void;\n};\n\nexport const Users: FC<UsersPropsType> = (props) => {\n  const {\n    users,\n    pageSize,\n    totalUsersCount,\n    page,\n    followingInProgress,\n    follow,\n    unfollow,\n    changePageHandler,\n  } = props;\n\n  const userElements = users.map((user) => (\n    <User\n      key={user.id}\n      user={user}\n      followingInProgress={followingInProgress}\n      follow={follow}\n      unfollow={unfollow}\n    />\n  ));\n\n  return (\n    <div className={s.usersBlock}>\n      <Paginator\n        pageSize={pageSize}\n        totalItemsCount={totalUsersCount}\n        currentPage={page}\n        changePageHandler={changePageHandler}\n      />\n\n      <ul className={s.list}>{userElements}</ul>\n      <button className={styleBtn.btn} type=\"button\" onClick={() => {}}>\n        Show more\n      </button>\n    </div>\n  );\n};\n","import { createSelector } from 'reselect';\n\nimport { AppStateType } from './reduxStore';\nimport { UserType } from '../types/types';\n\nconst getUsersSelector = (state: AppStateType): Array<UserType> =>\n  state.usersPage.users;\n\nexport const getUsers = createSelector(\n  getUsersSelector,\n  (users): Array<UserType> => users.filter((u) => !!u),\n);\n\nexport const getPageSize = (state: AppStateType): number =>\n  state.usersPage.pageSize;\n\nexport const getTotalUsersCount = (state: AppStateType): number =>\n  state.usersPage.totalUsersCount;\n\nexport const getCurrentPage = (state: AppStateType): number =>\n  state.usersPage.currentPage;\n\nexport const getIsFetching = (state: AppStateType): boolean =>\n  state.usersPage.isFetching;\n\nexport const getFollowingInProgress = (state: AppStateType): Array<number> =>\n  state.usersPage.followingInProgress;\n","import React, { Component, ComponentType } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { AppStateType } from '../../redux/reduxStore';\nimport {\n  actions as usersActions,\n  followUser,\n  requestUsers,\n  unfollowUser,\n} from '../../redux/usersReducer';\nimport { UserType } from '../../types/types';\nimport { Users } from './Users';\nimport { Preloader } from '../common/Preloader/Preloader';\nimport * as usersSelectors from '../../redux/usersSelectors';\n\nconst { setCurrentPage } = usersActions;\n\ntype StatePropsType = {\n  users: Array<UserType>;\n  pageSize: number;\n  totalUsersCount: number;\n  page: number;\n  isFetching: boolean;\n  followingInProgress: Array<number>;\n};\n\ntype DispatchPropsType = {\n  followUser: (userId: number) => void;\n  unfollowUser: (userId: number) => void;\n  setCurrentPage: (page: number) => void;\n  requestUsers: (page: number, pageSize: number) => void;\n};\n\ntype PropsType = StatePropsType & DispatchPropsType;\n\nclass UsersAPIContainer extends Component<PropsType> {\n  componentDidMount() {\n    const { page, pageSize, requestUsers: getUsers } = this.props;\n    getUsers(page, pageSize);\n  }\n\n  changePageHandler = (page: number) => {\n    const { pageSize, requestUsers: getUsers } = this.props;\n    getUsers(page, pageSize);\n  };\n\n  render(): JSX.Element {\n    const {\n      users,\n      pageSize,\n      totalUsersCount,\n      page,\n      followingInProgress,\n      followUser: follow,\n      unfollowUser: unfollow,\n      isFetching,\n    } = this.props;\n\n    return (\n      <>\n        {isFetching ? (\n          <Preloader text=\"Loading...\" />\n        ) : (\n          <Users\n            users={users}\n            pageSize={pageSize}\n            totalUsersCount={totalUsersCount}\n            page={page}\n            followingInProgress={followingInProgress}\n            follow={follow}\n            unfollow={unfollow}\n            changePageHandler={this.changePageHandler}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppStateType): StatePropsType => {\n  return {\n    users: usersSelectors.getUsers(state),\n    pageSize: usersSelectors.getPageSize(state),\n    totalUsersCount: usersSelectors.getTotalUsersCount(state),\n    page: usersSelectors.getCurrentPage(state),\n    isFetching: usersSelectors.getIsFetching(state),\n    followingInProgress: usersSelectors.getFollowingInProgress(state),\n  };\n};\n\nexport const UsersContainer = compose<ComponentType>(\n  connect(mapStateToProps, {\n    followUser,\n    unfollowUser,\n    setCurrentPage,\n    requestUsers,\n  }),\n)(UsersAPIContainer);\n","export default __webpack_public_path__ + \"static/media/logo.d6c257c2.svg\";","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport s from './Header.module.css';\nimport styleBtn from '../common/styles/Button.module.css';\nimport logo from '../../assets/images/logo.svg';\n\nexport type HeaderPropsType = {\n  login: string | null;\n  logout: () => void;\n  isAuth: boolean;\n};\n\nexport const Header: FC<HeaderPropsType> = ({ login, logout, isAuth }) => {\n  return (\n    <header className={s.header}>\n      <img className={s.logo} src={logo} width=\"40\" height=\"40\" alt=\"Logo\" />\n      <div className={s.loginBlock}>\n        {isAuth ? (\n          <div>\n            <span className={s.login}>{login}</span>\n            <button type=\"button\" className={styleBtn.btn} onClick={logout}>\n              Log out\n            </button>\n          </div>\n        ) : (\n          <Link className={styleBtn.btn} to=\"/login\">\n            Log in\n          </Link>\n        )}\n      </div>\n    </header>\n  );\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Header } from './Header';\nimport { AppStateType } from '../../redux/reduxStore';\nimport { logout } from '../../redux/authReducer';\n\nexport type StatePropsType = {\n  login: string | null;\n  isAuth: boolean;\n};\n\nexport type DispatchPropsType = {\n  logout: () => void;\n};\n\nexport type PropsType = StatePropsType & DispatchPropsType;\n\n// FIXME refactor to stateless-function\n// eslint-disable-next-line react/prefer-stateless-function\nclass HeaderAPIContainer extends Component<PropsType> {\n  render(): JSX.Element {\n    const { login, logout: logoutCallback, isAuth } = this.props;\n\n    return <Header login={login} logout={logoutCallback} isAuth={isAuth} />;\n  }\n}\n\nconst mapStateToProps = ({\n  auth: { login, isAuth },\n}: AppStateType): StatePropsType => {\n  return { login, isAuth };\n};\n\nexport const HeaderContainer = connect<\n  StatePropsType,\n  DispatchPropsType,\n  Record<string, never>,\n  AppStateType\n>(mapStateToProps, { logout })(HeaderAPIContainer);\n","import React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport s from './Navbar.module.css';\n\nexport const Navbar: FC = () => {\n  return (\n    <nav className={s.nav}>\n      <ul className={s.list}>\n        <li className={s.item}>\n          <NavLink className={s.link} to=\"/profile\" activeClassName={s.active}>\n            Profile\n          </NavLink>\n        </li>\n        <li className={s.item}>\n          <NavLink className={s.link} to=\"/dialogs\" activeClassName={s.active}>\n            Messages\n          </NavLink>\n        </li>\n        <li className={s.item}>\n          <NavLink className={s.link} to=\"/users\" activeClassName={s.active}>\n            Users\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { reduxForm, InjectedFormProps, Field } from 'redux-form';\n\nimport s from './Login.module.css';\nimport styleBtn from '../common/styles/Button.module.css';\nimport { Input } from '../common/FormsControls/FormsControls';\nimport { maxLengthCreator, required } from '../../utils/validators';\nimport { login } from '../../redux/authReducer';\nimport { AppStateType } from '../../redux/reduxStore';\nimport { LoginDataType } from '../../api/authApi';\n\nconst maxLength30 = maxLengthCreator(30);\n\ntype LoginFormDataType = {\n  email: string;\n  password: string;\n  rememberMe: boolean;\n};\n\nconst LoginForm: FC<InjectedFormProps<LoginFormDataType>> = ({\n  handleSubmit,\n  error,\n}) => {\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <Field\n        component={Input}\n        name=\"email\"\n        placeholder=\"Email\"\n        validate={[required, maxLength30]}\n      />\n\n      <Field\n        component={Input}\n        type=\"password\"\n        name=\"password\"\n        placeholder=\"Password\"\n        validate={[required, maxLength30]}\n      />\n\n      {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n      <label className={`${s.checkboxWrapper}`}>\n        <Field\n          className={s.checkbox}\n          component=\"input\"\n          type=\"checkbox\"\n          name=\"rememberMe\"\n        />\n        <span className={s.hint}>remember me</span>\n      </label>\n\n      <div className={`${s.errorWrapper}`}>\n        {error && <span className={`${s.error}`}>{error}</span>}\n      </div>\n\n      <div className={`${s.btnWrapper}`}>\n        <button type=\"submit\" className={styleBtn.btn}>\n          Log in\n        </button>\n      </div>\n    </form>\n  );\n};\n\nconst LoginFormRedux = reduxForm<LoginFormDataType>({\n  form: 'login',\n})(LoginForm);\n\ntype StatePropsType = {\n  isAuth: boolean;\n};\n\ntype DispatchPropsType = {\n  login: (loginData: LoginDataType) => void;\n};\n\nconst Login: FC<StatePropsType & DispatchPropsType> = ({\n  login: loginCallback,\n  isAuth,\n}) => {\n  const submitHandler = (formData: LoginFormDataType) => {\n    loginCallback({ ...formData });\n  };\n\n  if (isAuth) return <Redirect to=\"/profile\" />;\n\n  return (\n    <div>\n      <h1 className={s.title}>LOGIN</h1>\n\n      <div className={s.loginFormWrapper}>\n        <LoginFormRedux onSubmit={submitHandler} />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({\n  auth: { isAuth },\n}: AppStateType): StatePropsType => {\n  return {\n    isAuth,\n  };\n};\n\nexport const LoginPage = connect<\n  StatePropsType,\n  DispatchPropsType,\n  Record<string, never>,\n  AppStateType\n>(mapStateToProps, { login })(Login);\n","import React, { FC } from 'react';\nimport s from './Error404.module.css';\n\nexport const Error404: FC = () => {\n  return (\n    <div className={s.page}>\n      <div className={s.main}>\n        <h1 className={s.title}>404 - Not&nbsp;found</h1>\n        <p className={s.text}>\n          —<span>Uh oh.</span> <span>¯\\_(ツ)_/¯</span>—\n        </p>\n      </div>\n    </div>\n  );\n};\n","import React, { FC, Component, ComponentType, lazy, Suspense } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n  withRouter,\n} from 'react-router-dom';\nimport { compose } from 'redux';\nimport { connect, Provider } from 'react-redux';\n\nimport s from './App.module.css';\nimport { AppStateType, store } from './redux/reduxStore';\nimport { UsersContainer } from './components/Users/UsersContainer';\nimport { HeaderContainer } from './components/Header/HeaderContainer';\nimport { Navbar } from './components/Navbar/Navbar';\nimport { LoginPage } from './components/Login/Login';\nimport { initializeApp } from './redux/appReducer';\nimport { Preloader } from './components/common/Preloader/Preloader';\nimport { Error404 } from './components/common/Error404/Error404';\n\nconst DialogsContainer = lazy(async () => {\n  const module = await import('./components/Dialogs/DialogsContainer');\n  return { default: module.DialogsContainer };\n});\nconst ProfileContainer = lazy(async () => {\n  const module = await import('./components/Profile/ProfileContainer');\n  return { default: module.ProfileContainer };\n});\n\ntype StatePropsType = {\n  initialized: boolean;\n};\n\ntype DispatchPropsType = {\n  initializeApp: () => void;\n};\n\ntype PropsType = StatePropsType & DispatchPropsType;\n\nclass App extends Component<PropsType> {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return (\n        <div className={s.preloaderAppWrapper}>\n          <Preloader text=\"Loading SamuraiJSApp\" />\n        </div>\n      );\n    }\n\n    return (\n      <div className={s.appWrapper}>\n        <HeaderContainer />\n        <Navbar />\n\n        <main className={s.appWrapperContent}>\n          <Suspense\n            fallback={\n              <div className={s.preloaderPageWrapper}>\n                <Preloader text=\"Loading...\" />\n              </div>\n            }\n          >\n            <Switch>\n              <Route exact path=\"/\" render={() => <Redirect to=\"/profile\" />} />\n              <Route\n                path=\"/profile/:userId?\"\n                render={() => <ProfileContainer />}\n              />\n              <Route path=\"/dialogs\" render={() => <DialogsContainer />} />\n              <Route path=\"/users\" render={() => <UsersContainer />} />\n              <Route path=\"/login\" render={() => <LoginPage />} />\n              <Route path=\"/404\" render={() => <Error404 />} />\n              <Route path=\"*\" render={() => <Redirect to=\"/404\" />} />\n            </Switch>\n          </Suspense>\n        </main>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  app: { initialized },\n}: AppStateType): StatePropsType => {\n  return {\n    initialized,\n  };\n};\n\nconst AppContainer = compose<ComponentType>(\n  connect(mapStateToProps, { initializeApp }),\n  withRouter,\n)(App);\n\nexport const SamuraiJSApp: FC = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <AppContainer />\n      </Router>\n    </Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { SamuraiJSApp } from './App';\nimport { reportWebVitals } from './reportWebVitals';\n\nReactDOM.render(<SamuraiJSApp />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Paginator_btn__C1fmc\",\"selected\":\"Paginator_selected__2cTTO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"User_item__2PdYA\",\"avatarWrapper\":\"User_avatarWrapper__abUew\",\"avatar\":\"User_avatar__27DBJ\",\"info\":\"User_info__2Xv8f\",\"location\":\"User_location__2fcbB\"};","import React, { FC } from 'react';\n\nimport s from './Preloader.module.css';\n\ntype PreloaderPropsType = {\n  text?: string;\n};\n\nexport const Preloader: FC<PreloaderPropsType> = ({ text }) => {\n  return (\n    <div className={s.preloader}>\n      <div className={s.loaderCircle} />\n      <div className={s.loaderBottom}>{text}</div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__3rnam\",\"appWrapperContent\":\"App_appWrapperContent__ctAiS\",\"preloaderAppWrapper\":\"App_preloaderAppWrapper__16ffo\",\"preloaderPageWrapper\":\"App_preloaderPageWrapper__2SZJQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"logo\":\"Header_logo__3_SJs\",\"login\":\"Header_login__3V3Qa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Error404_page__OgCEo\",\"title\":\"Error404_title__AzCYh\",\"text\":\"Error404_text__2CMhG\"};","type FieldValidatorType = (value: string) => string | undefined;\n\nexport const required: FieldValidatorType = (value) => {\n  return value ? undefined : 'Field is required';\n};\n\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (\n  value,\n) => {\n  return value && value.length > maxLength\n    ? `Max length is ${maxLength} symbols`\n    : undefined;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2dvkO\",\"loaderCircle\":\"Preloader_loaderCircle__2WGY1\",\"load\":\"Preloader_load__3tO9j\",\"loaderBottom\":\"Preloader_loaderBottom__3u2bT\",\"pulse\":\"Preloader_pulse__2uAlH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formControlError\":\"FormsControls_formControlError__MEb4f\"};","import React, { FC } from 'react';\nimport { WrappedFieldMetaProps, WrappedFieldProps } from 'redux-form';\n\nimport s from './FormsControls.module.css';\n\ntype FormControlPropsType = {\n  meta: WrappedFieldMetaProps;\n  className?: string;\n};\n\nexport const FormControl: FC<FormControlPropsType> = ({\n  meta: { touched, error },\n  children,\n  className = '',\n}) => {\n  const hasError = touched && error;\n\n  const formControlClassName = `${s.formControl} ${className} ${\n    hasError && s.formControlError\n  }`;\n\n  return (\n    <div className={formControlClassName}>\n      {hasError && <span className={`${s.error}`}>{error}</span>}\n\n      {children}\n    </div>\n  );\n};\n\nexport const Textarea: FC<WrappedFieldProps> = (props) => {\n  const { input, meta, ...restProps } = props;\n\n  return (\n    <FormControl {...props}>\n      <textarea placeholder=\"Write here...\" {...input} {...restProps} />\n    </FormControl>\n  );\n};\n\nexport const Input: FC<WrappedFieldProps> = (props) => {\n  const { input, meta, ...restProps } = props;\n\n  return (\n    <FormControl {...props}>\n      <input\n        type=\"text\"\n        placeholder=\"Write here...\"\n        {...input}\n        {...restProps}\n      />\n    </FormControl>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersBlock\":\"Users_usersBlock__2PNX-\",\"list\":\"Users_list__bCqoi\"};"],"sourceRoot":""}