{"version":3,"sources":["components/Users/Users.module.css","assets/images/userAvatar.svg","redux/profileReducer.ts","api/profileApi.ts","redux/dialogsReducer.ts","utils/randomId.ts","components/Login/Login.module.css","components/common/styles/button.module.css","redux/middleware.ts","redux/usersReducer.ts","api/usersApi.ts","redux/authReducer.ts","api/authApi.ts","api/securityApi.ts","redux/appReducer.ts","redux/sidebarReducer.ts","redux/reduxStore.ts","assets/images/logo.svg","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","hooks/useTypedSelector.ts","redux/usersSelectors.ts","components/common/Paginator/Paginator.tsx","components/Users/User/User.tsx","utils/formikUtils.ts","components/Users/UsersSearchForm.tsx","components/Users/Users.tsx","reportWebVitals.ts","components/Users/UsersPage.tsx","components/Login/Login.tsx","components/common/Error404/Error404.tsx","app/Routes.tsx","components/Navbar/Navbar.tsx","app/App.tsx","index.tsx","components/common/Paginator/Paginator.module.css","components/Users/User/User.module.css","app/App.module.css","components/Header/Header.module.css","components/Navbar/Navbar.module.css","components/common/Preloader/Preloader.tsx","utils/validators.ts","components/common/Error404/Error404.module.css","components/common/FormsControls/FormsControls.tsx","components/common/Preloader/Preloader.module.css","components/common/FormsControls/FormsControls.module.css","api/api.ts"],"names":["module","exports","ActionType","profileApi","userId","API","get","then","res","data","status","put","photo","formData","FormData","append","headers","profile","initialState","posts","id","randomId","message","likesCount","profileReducer","state","action","type","ADD_POST","post","payload","DELETE_POST","filter","p","SET_USER_PROFILE","SET_STATUS","SET_USER_PHOTO","photos","actions","addPost","text","deletePost","setUserProfile","setStatus","setUserPhoto","getProfile","dispatch","a","getStatus","updateStatus","resultCode","ResultCode","Success","console","error","savePhoto","saveProfile","getState","auth","Error","stopSubmit","_error","messages","Promise","reject","dialogs","name","dialogsReducer","SEND_MESSAGE","sendMessage","Math","floor","random","toString","composeEnhancers","createLogger","duration","collapsed","colors","title","prevState","nextState","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","enhancedStore","applyMiddleware","usersApi","page","pageSize","term","friend","delete","users","totalUsersCount","currentPage","isFetching","followingInProgress","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_FILTER","totalCount","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","fetchUsers","items","authApi","email","password","rememberMe","captcha","securityApi","login","isAuth","captchaUrl","SET_AUTH_USER_DATA","SET_CAPTCHA_URL","getAuthUserData","initialized","INITIALIZED_SUCCESS","rootReducer","combineReducers","profilePage","dialogsPage","sidebar","usersPage","map","u","followed","app","form","store","createStore","Header","logout","className","s","header","container","logo","src","width","height","alt","loginBlock","styleBtn","btn","onClick","to","HeaderContainer","connect","props","logoutCallback","useTypedSelector","useSelector","getUsers","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getUsersFilter","Paginator","totalItemsCount","changePageHandler","portionSize","portionCount","ceil","startIndex","pages","Array","fill","reduce","acc","item","idx","current","paginator","disabled","isCurrent","selected","User","user","follow","unfollow","avatarWrapper","avatar","small","userAvatar","some","info","location","transformValues","value","UsersSearchForm","memo","changeFilterHandler","initialValues","onSubmit","setSubmitting","values","isSubmitting","as","displayName","onPerfEntry","Users","useDispatch","useEffect","followUser","unfollowUser","userElements","usersBlock","list","UsersPage","Preloader","maxLength30","maxLengthCreator","LoginReduxForm","reduxForm","handleSubmit","Field","component","Input","placeholder","validate","required","checkboxWrapper","checkbox","hint","captchaWrapper","errorWrapper","btnWrapper","LoginPage","loginFormWrapper","loginData","ResultCodeCaptcha","Required","url","length","Error404","main","PATH","PROFILE","DIALOGS","USERS","LOGIN","ERROR_404","BASENAME","DialogsContainer","lazy","default","ProfileContainer","Routes","path","exact","render","from","Navbar","nav","Object","entries","slice","link","activeClassName","active","replace","toLowerCase","App","catchAllUnhandledErrors","e","alert","this","initializeApp","addEventListener","removeEventListener","appWrapper","appContent","fallback","preloaderPageWrapper","preloaderAppWrapper","Component","AppContainer","AuthUserDataPromise","all","withRouter","SamuraiJSApp","basename","ReactDOM","document","getElementById","Function","getCLS","getFID","getFCP","getLCP","getTTFB","preloader","loaderCircle","loaderBottom","undefined","maxLength","FormControl","meta","touched","children","hasError","formControlClassName","formControl","formControlError","Textarea","input","restProps","axios","create","baseURL","withCredentials","process"],"mappings":"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","file":"static/js/main.ca6391ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersBlock\":\"Users_usersBlock__2PNX-\",\"list\":\"Users_list__bCqoi\"};","export default __webpack_public_path__ + \"static/media/userAvatar.3b076f75.svg\";","import { stopSubmit } from 'redux-form';\nimport type { FormAction } from 'redux-form';\n\nimport { randomId } from '../utils/randomId';\nimport { profileApi } from '../api/profileApi';\nimport type {\n  InferActionsType,\n  PhotosType,\n  PostType,\n  ProfileType,\n} from '../types/types';\nimport { ResultCode } from '../api/api';\nimport type { ThunkType } from './reduxStore';\n\nexport enum ActionType {\n  ADD_POST = 'SN/PROFILE/ADD_POST',\n  DELETE_POST = 'SN/PROFILE/DELETE_POST',\n  SET_USER_PROFILE = 'SN/PROFILE/SET_USER_PROFILE',\n  SET_STATUS = 'SN/PROFILE/SET_STATUS',\n  SET_USER_PHOTO = 'SN/PROFILE/SET_USER_PHOTO',\n}\n\nexport const initialState = {\n  posts: [\n    {\n      id: randomId(),\n      message: 'Hi, dude!',\n      likesCount: 12,\n    },\n    {\n      id: randomId(),\n      message: 'yo bro',\n      likesCount: 8,\n    },\n    {\n      id: randomId(),\n      message: 'wazzup',\n      likesCount: 111,\n    },\n  ] as Array<PostType>,\n  profile: null as ProfileType | null,\n  status: '',\n};\n\nexport const profileReducer = (\n  state = initialState,\n  action: ProfilePageActionsType,\n): ProfilePageStateType => {\n  switch (action.type) {\n    case ActionType.ADD_POST: {\n      const post: PostType = {\n        id: randomId(),\n        message: action.payload,\n        likesCount: 0,\n      };\n\n      return { ...state, posts: [...state.posts, post] };\n    }\n\n    case ActionType.DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((p) => p.id !== action.payload),\n      };\n\n    case ActionType.SET_USER_PROFILE:\n      return { ...state, profile: action.payload };\n\n    case ActionType.SET_STATUS:\n      return { ...state, status: action.payload };\n\n    case ActionType.SET_USER_PHOTO:\n      return {\n        ...state,\n        profile: {\n          ...state.profile,\n          photos: action.payload,\n        } as ProfileType,\n      };\n\n    default:\n      return state;\n  }\n};\n\n/** Actions */\nexport const actions = {\n  addPost: (text: string) =>\n    ({ type: ActionType.ADD_POST, payload: text } as const),\n\n  deletePost: (id: string) =>\n    ({ type: ActionType.DELETE_POST, payload: id } as const),\n\n  setUserProfile: (profile: ProfileType) =>\n    ({ type: ActionType.SET_USER_PROFILE, payload: profile } as const),\n\n  setStatus: (status: string) =>\n    ({ type: ActionType.SET_STATUS, payload: status } as const),\n\n  setUserPhoto: (photos: PhotosType) =>\n    ({ type: ActionType.SET_USER_PHOTO, payload: photos } as const),\n};\n\n/** Thunks */\nexport const getProfile = (\n  userId: number,\n): ThunkType<ProfilePageActionsType> => async (dispatch) => {\n  const data = await profileApi.getProfile(userId);\n\n  dispatch(actions.setUserProfile(data));\n};\n\nexport const getStatus = (\n  userId: number,\n): ThunkType<ProfilePageActionsType> => async (dispatch) => {\n  const data = await profileApi.getStatus(userId);\n\n  dispatch(actions.setStatus(data));\n};\n\nexport const updateStatus = (\n  status: string,\n): ThunkType<ProfilePageActionsType> => async (dispatch) => {\n  try {\n    const data = await profileApi.updateStatus(status);\n\n    if (data.resultCode === ResultCode.Success) {\n      dispatch(actions.setStatus(status));\n    }\n  } catch (error) {\n    // TODO dispatch error message instead of console\n    // eslint-disable-next-line no-console\n    console.error('Error: ', { ...error });\n  }\n};\n\nexport const savePhoto = (\n  photo: File,\n): ThunkType<ProfilePageActionsType> => async (dispatch) => {\n  const data = await profileApi.savePhoto(photo);\n\n  if (data.resultCode === ResultCode.Success) {\n    dispatch(actions.setUserPhoto(data.data));\n  }\n};\n\nexport const saveProfile = (\n  profile: ProfileType,\n): ThunkType<ProfilePageActionsType | FormAction> => async (\n  dispatch,\n  getState,\n) => {\n  const {\n    auth: { id: userId },\n  } = getState();\n\n  const data = await profileApi.saveProfile(profile);\n\n  if (data.resultCode === ResultCode.Success) {\n    if (userId !== null) {\n      await dispatch(getProfile(userId));\n    } else {\n      throw new Error(\"userId can't be null\");\n    }\n  } else {\n    dispatch(stopSubmit('edit-profile', { _error: data.messages[0] }));\n    await Promise.reject(data.messages[0]);\n  }\n};\n\n/** Types */\nexport type ProfilePageStateType = typeof initialState;\n\nexport type ProfilePageActionsType = InferActionsType<typeof actions>;\n","import { API } from './api';\nimport type { ApiResponseType } from './api';\nimport type { PhotosType, ProfileType } from '../types/types';\n\nexport const profileApi = {\n  getProfile(userId: number): Promise<ProfileType> {\n    return API.get<ProfileType>(`profile/${userId}`).then((res) => res.data);\n  },\n  getStatus(userId: number): Promise<string> {\n    return API.get<string>(`profile/status/${userId}`).then((res) => res.data);\n  },\n  updateStatus(status: string): Promise<ApiResponseType> {\n    return API.put<ApiResponseType>(`profile/status/`, { status }).then(\n      (res) => res.data,\n    );\n  },\n  savePhoto(photo: File): Promise<ApiResponseType<PhotosType>> {\n    const formData = new FormData();\n    formData.append('image', photo);\n\n    return API.put<ApiResponseType<PhotosType>>(`profile/photo/`, formData, {\n      headers: { 'Content-Type': 'multipart/form-data' },\n    }).then((res) => res.data);\n  },\n  saveProfile(profile: ProfileType): Promise<ApiResponseType> {\n    return API.put<ApiResponseType>(`profile/`, profile).then(\n      (res) => res.data,\n    );\n  },\n};\n","import { randomId } from '../utils/randomId';\nimport type {\n  DialogItemType,\n  InferActionsType,\n  MessageType,\n} from '../types/types';\n\nexport enum ActionType {\n  SEND_MESSAGE = 'SN/DIALOGS/SEND_MESSAGE',\n}\n\nconst initialState = {\n  dialogs: [\n    {\n      id: randomId(),\n      name: 'Andrei',\n    },\n    {\n      id: randomId(),\n      name: 'John Doe',\n    },\n    {\n      id: randomId(),\n      name: 'Patrick',\n    },\n    {\n      id: randomId(),\n      name: 'Someone',\n    },\n  ] as Array<DialogItemType>,\n  messages: [\n    {\n      id: randomId(),\n      message: 'Hi',\n    },\n    {\n      id: randomId(),\n      message: 'Hi, dude!',\n    },\n    {\n      id: randomId(),\n      message: 'Yo',\n    },\n  ] as Array<MessageType>,\n};\n\nexport const dialogsReducer = (\n  state = initialState,\n  action: DialogsPageActionsType,\n): DialogsPageStateType => {\n  switch (action.type) {\n    case ActionType.SEND_MESSAGE: {\n      const message: MessageType = {\n        id: randomId(),\n        message: action.payload,\n      };\n\n      return {\n        ...state,\n        messages: [...state.messages, message],\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\n/** Actions */\nexport const actions = {\n  sendMessage: (message: string) =>\n    ({ type: ActionType.SEND_MESSAGE, payload: message } as const),\n};\n\n/** Types */\nexport type DialogsPageStateType = typeof initialState;\n\nexport type DialogsPageActionsType = InferActionsType<typeof actions>;\n","export const randomId = (): string =>\n  Math.floor(Math.random() * 1e9).toString(16);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__2mvFD\",\"title\":\"Login_title__bh47u\",\"checkboxWrapper\":\"Login_checkboxWrapper__7_o-w\",\"btnWrapper\":\"Login_btnWrapper__2bwwv\",\"checkbox\":\"Login_checkbox__3UFrU\",\"hint\":\"Login_hint__3ofnl\",\"captchaWrapper\":\"Login_captchaWrapper__3iuBm\",\"errorWrapper\":\"Login_errorWrapper__3WLZ5 errorMessageForm_errorWrapper__LmXZN\",\"error\":\"Login_error__17Wu6 errorMessageForm_error__1dDl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"button_btn__3GHkQ\",\"back-pulse\":\"button_back-pulse__1zdKZ\"};","import { applyMiddleware, compose } from 'redux';\nimport type { Middleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\n\nconst DEV = process.env.NODE_ENV !== 'production';\n\nconst logger = createLogger({\n  duration: true,\n  collapsed: true,\n  colors: {\n    title: () => '#139BFE',\n    prevState: () => '#1C5FAF',\n    action: () => '#149945',\n    nextState: () => '#A47104',\n    error: () => '#FF0005',\n  },\n});\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore next line\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst composeEnhancers = DEV && devtools ? devtools : compose;\n\nconst middleware: Array<Middleware> = [thunk];\n\nif (DEV) middleware.push(logger);\n\nexport const enhancedStore = composeEnhancers(applyMiddleware(...middleware));\n","import { usersApi } from '../api/usersApi';\nimport type { FilterType, InferActionsType, UserType } from '../types/types';\nimport { ResultCode } from '../api/api';\nimport type { ThunkType } from './reduxStore';\n\nexport enum ActionType {\n  FOLLOW = 'SN/USERS/FOLLOW',\n  UNFOLLOW = 'SN/USERS/UNFOLLOW',\n  SET_USERS = 'SN/USERS/SET_USERS',\n  SET_CURRENT_PAGE = 'SN/USERS/SET_CURRENT_PAGE',\n  SET_FILTER = 'SN/USERS/SET_FILTER',\n  SET_USERS_TOTAL_COUNT = 'SN/USERS/SET_USERS_TOTAL_COUNT',\n  TOGGLE_IS_FETCHING = 'SN/USERS/TOGGLE_IS_FETCHING',\n  TOGGLE_IS_FOLLOWING_PROGRESS = 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS',\n}\n\nexport const initialState = {\n  users: [] as Array<UserType>,\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: [] as Array<number>,\n  filter: {\n    term: '',\n    friend: null,\n  } as FilterType,\n};\n\nexport const usersReducer = (\n  state = initialState,\n  action: UsersPageActionsType,\n): UsersPageStateType => {\n  switch (action.type) {\n    case ActionType.FOLLOW:\n      return {\n        ...state,\n        users: state.users.map((u) =>\n          u.id === action.payload ? { ...u, followed: true } : u,\n        ),\n      };\n\n    case ActionType.UNFOLLOW:\n      return {\n        ...state,\n        users: state.users.map((u) =>\n          u.id === action.payload ? { ...u, followed: false } : u,\n        ),\n      };\n\n    case ActionType.SET_USERS:\n      return {\n        ...state,\n        users: action.payload,\n      };\n\n    case ActionType.SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.payload,\n      };\n\n    case ActionType.SET_FILTER:\n      return {\n        ...state,\n        filter: action.payload,\n      };\n\n    case ActionType.SET_USERS_TOTAL_COUNT:\n      return {\n        ...state,\n        totalUsersCount: action.payload,\n      };\n\n    case ActionType.TOGGLE_IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.payload,\n      };\n\n    case ActionType.TOGGLE_IS_FOLLOWING_PROGRESS:\n      return {\n        ...state,\n        followingInProgress: action.payload.isFetching\n          ? [...state.followingInProgress, action.payload.userId]\n          : state.followingInProgress.filter(\n              (id) => id !== action.payload.userId,\n            ),\n      };\n\n    default:\n      return state;\n  }\n};\n\n/** Actions */\nexport const actions = {\n  follow: (userId: number) =>\n    ({ type: ActionType.FOLLOW, payload: userId } as const),\n\n  unfollow: (userId: number) =>\n    ({ type: ActionType.UNFOLLOW, payload: userId } as const),\n\n  setUsers: (users: Array<UserType>) =>\n    ({ type: ActionType.SET_USERS, payload: users } as const),\n\n  setCurrentPage: (page: number) =>\n    ({ type: ActionType.SET_CURRENT_PAGE, payload: page } as const),\n\n  setFilter: (filter: FilterType) =>\n    ({ type: ActionType.SET_FILTER, payload: filter } as const),\n\n  setUsersTotalCount: (totalCount: number) =>\n    ({ type: ActionType.SET_USERS_TOTAL_COUNT, payload: totalCount } as const),\n\n  toggleIsFetching: (isFetching: boolean) =>\n    ({ type: ActionType.TOGGLE_IS_FETCHING, payload: isFetching } as const),\n\n  toggleFollowingProgress: (isFetching: boolean, userId: number) =>\n    ({\n      type: ActionType.TOGGLE_IS_FOLLOWING_PROGRESS,\n      payload: {\n        isFetching,\n        userId,\n      },\n    } as const),\n};\n\n/** Thunks */\nexport const fetchUsers = (\n  page: number,\n  pageSize: number,\n  filter: FilterType,\n): ThunkType<UsersPageActionsType> => async (dispatch) => {\n  dispatch(actions.toggleIsFetching(true));\n  dispatch(actions.setCurrentPage(page));\n  dispatch(actions.setFilter(filter));\n\n  const data = await usersApi.getUsers(page, pageSize, filter);\n\n  dispatch(actions.toggleIsFetching(false));\n  dispatch(actions.setUsers(data.items));\n  dispatch(actions.setUsersTotalCount(data.totalCount));\n};\n\nexport const followUser = (\n  userId: number,\n): ThunkType<UsersPageActionsType> => async (dispatch) => {\n  dispatch(actions.toggleFollowingProgress(true, userId));\n\n  const data = await usersApi.follow(userId);\n\n  if (data.resultCode === ResultCode.Success) {\n    dispatch(actions.follow(userId));\n  }\n  dispatch(actions.toggleFollowingProgress(false, userId));\n};\n\nexport const unfollowUser = (\n  userId: number,\n): ThunkType<UsersPageActionsType> => async (dispatch) => {\n  dispatch(actions.toggleFollowingProgress(true, userId));\n\n  const data = await usersApi.unfollow(userId);\n\n  if (data.resultCode === ResultCode.Success) {\n    dispatch(actions.unfollow(userId));\n  }\n  dispatch(actions.toggleFollowingProgress(false, userId));\n};\n\n/** Types */\nexport type UsersPageStateType = typeof initialState;\n\nexport type UsersPageActionsType = InferActionsType<typeof actions>;\n","import { API } from './api';\nimport type { ApiResponseType, ItemsResponseType } from './api';\nimport type { UserType, FilterType } from '../types/types';\n\nexport const usersApi = {\n  getUsers(\n    page = 1,\n    pageSize = 5,\n    filter: FilterType = { term: '', friend: null },\n  ): Promise<ItemsResponseType<UserType>> {\n    const friend = filter.friend === null ? '' : filter.friend;\n\n    return API.get<ItemsResponseType<UserType>>(\n      `users?page=${page}&count=${pageSize}&term=${filter.term}&friend=${friend}`,\n    ).then((res) => res.data);\n  },\n\n  follow(userId: number): Promise<ApiResponseType> {\n    return API.post<ApiResponseType>(`follow/${userId}`).then(\n      (res) => res.data,\n    );\n  },\n\n  unfollow(userId: number): Promise<ApiResponseType> {\n    return API.delete<ApiResponseType>(`follow/${userId}`).then(\n      (res) => res.data,\n    );\n  },\n};\n","import { stopSubmit } from 'redux-form';\nimport type { FormAction } from 'redux-form';\n\nimport { authApi } from '../api/authApi';\nimport type { LoginDataType } from '../api/authApi';\nimport { securityApi } from '../api/securityApi';\nimport { ResultCode, ResultCodeCaptcha } from '../api/api';\nimport type { InferActionsType } from '../types/types';\nimport type { ThunkType } from './reduxStore';\n\nexport enum ActionType {\n  SET_AUTH_USER_DATA = 'SN/AUTH/SET_AUTH_USER_DATA',\n  SET_CAPTCHA_URL = 'SN/AUTH/SET_CAPTCHA_URL',\n}\n\nexport const initialState = {\n  id: null as number | null,\n  email: null as string | null,\n  login: null as string | null,\n  isAuth: false,\n  captchaUrl: null as string | null,\n};\n\nexport const authReducer = (\n  state = initialState,\n  action: AuthActionsType,\n): AuthStateType => {\n  switch (action.type) {\n    case ActionType.SET_AUTH_USER_DATA:\n    case ActionType.SET_CAPTCHA_URL:\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\n/** Actions */\nexport const actions = {\n  setAuthUserData: (\n    id: number | null,\n    email: string | null,\n    login: string | null,\n    isAuth: boolean,\n  ) =>\n    ({\n      type: ActionType.SET_AUTH_USER_DATA,\n      payload: { id, email, login, isAuth },\n    } as const),\n  setCaptchaUrl: (captchaUrl: string) =>\n    ({\n      type: ActionType.SET_CAPTCHA_URL,\n      payload: { captchaUrl },\n    } as const),\n};\n\n/** Thunks */\nexport const getAuthUserData = (): ThunkType<AuthActionsType> => async (\n  dispatch,\n) => {\n  const data = await authApi.me();\n\n  if (data.resultCode === ResultCode.Success) {\n    const { id, email, login } = data.data;\n\n    dispatch(actions.setAuthUserData(id, email, login, true));\n  }\n};\n\nexport const getCaptchaUrl = (): ThunkType<AuthActionsType> => async (\n  dispatch,\n) => {\n  const data = await securityApi.getCaptchaUrl();\n\n  if (data.url) {\n    await dispatch(actions.setCaptchaUrl(data.url));\n  }\n};\n\nexport const login = (\n  loginData: LoginDataType,\n): ThunkType<AuthActionsType | FormAction> => async (dispatch) => {\n  const data = await authApi.login(loginData);\n\n  if (data.resultCode === ResultCode.Success) {\n    await dispatch(getAuthUserData());\n  } else {\n    if (data.resultCode === ResultCodeCaptcha.Required) {\n      await dispatch(getCaptchaUrl());\n    }\n\n    const message = data.messages.length ? data.messages[0] : 'Some error';\n\n    dispatch(stopSubmit('login', { _error: message }));\n  }\n};\n\nexport const logout = (): ThunkType<AuthActionsType> => async (dispatch) => {\n  const data = await authApi.logout();\n\n  if (data.resultCode === ResultCode.Success) {\n    dispatch(actions.setAuthUserData(null, null, null, false));\n  }\n};\n\n/** Types */\nexport type AuthStateType = typeof initialState;\n\nexport type AuthActionsType = InferActionsType<typeof actions>;\n","import { API, ResultCode, ResultCodeCaptcha } from './api';\nimport type { ApiResponseType } from './api';\n\nexport type MeResponseDataType = {\n  id: number;\n  email: string;\n  login: string;\n};\n\nexport type LoginResponseDataType = {\n  userId: number;\n};\n\nexport type LoginDataType = {\n  email: string;\n  password: string;\n  rememberMe?: boolean;\n  captcha?: null | string;\n};\n\nexport const authApi = {\n  me(): Promise<ApiResponseType<MeResponseDataType>> {\n    return API.get<ApiResponseType<MeResponseDataType>>(`auth/me`).then(\n      (res) => res.data,\n    );\n  },\n  login({\n    email,\n    password,\n    rememberMe = false,\n    captcha = null,\n  }: LoginDataType): Promise<\n    ApiResponseType<LoginResponseDataType, ResultCode | ResultCodeCaptcha>\n  > {\n    return API.post<\n      ApiResponseType<LoginResponseDataType, ResultCode | ResultCodeCaptcha>\n    >(`auth/login`, {\n      email,\n      password,\n      rememberMe,\n      captcha,\n    }).then((res) => res.data);\n  },\n  logout(): Promise<ApiResponseType> {\n    return API.delete<ApiResponseType>(`auth/login`).then((res) => res.data);\n  },\n};\n","import { API } from './api';\n\nexport type GetCaptchaUrlResponseType = {\n  url: string;\n};\n\nexport const securityApi = {\n  getCaptchaUrl(): Promise<GetCaptchaUrlResponseType> {\n    return API.get<GetCaptchaUrlResponseType>(`security/get-captcha-url`).then(\n      (res) => res.data,\n    );\n  },\n};\n","import { getAuthUserData } from './authReducer';\nimport type { InferActionsType } from '../types/types';\nimport type { ThunkType } from './reduxStore';\n\nexport enum ActionType {\n  INITIALIZED_SUCCESS = 'SN/APP/INITIALIZED_SUCCESS',\n}\n\nconst initialState = {\n  initialized: false,\n};\n\nexport const appReducer = (\n  state = initialState,\n  action: AppActionsType,\n): AppInitialStateType => {\n  switch (action.type) {\n    case ActionType.INITIALIZED_SUCCESS:\n      return {\n        ...state,\n        initialized: true,\n      };\n\n    default:\n      return state;\n  }\n};\n\n/** Actions */\nexport const actions = {\n  initializedSuccess: () =>\n    ({\n      type: ActionType.INITIALIZED_SUCCESS,\n    } as const),\n};\n\n/** Thunks */\nexport const initializeApp = (): ThunkType<AppActionsType> => async (\n  dispatch,\n) => {\n  const AuthUserDataPromise = await dispatch(getAuthUserData());\n\n  Promise.all([AuthUserDataPromise]).then(() => {\n    dispatch(actions.initializedSuccess());\n  });\n};\n\n/** Types */\nexport type AppInitialStateType = typeof initialState;\n\nexport type AppActionsType = InferActionsType<typeof actions>;\n","const initialState = {};\n\nexport type SidebarType = typeof initialState;\n\nexport const sidebarReducer = (\n  state = initialState,\n  action: SidebarActionTypes,\n): SidebarType => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\ntype SidebarActionTypes = { type: 'TYPE' };\n","import { combineReducers, createStore } from 'redux';\nimport type { Action } from 'redux';\nimport type { ThunkAction } from 'redux-thunk';\nimport { reducer as form } from 'redux-form';\n\nimport { enhancedStore } from './middleware';\nimport { dialogsReducer as dialogsPage } from './dialogsReducer';\nimport { profileReducer as profilePage } from './profileReducer';\nimport { usersReducer as usersPage } from './usersReducer';\nimport { authReducer as auth } from './authReducer';\nimport { appReducer as app } from './appReducer';\nimport { sidebarReducer as sidebar } from './sidebarReducer';\n\nconst rootReducer = combineReducers({\n  profilePage,\n  dialogsPage,\n  sidebar,\n  usersPage,\n  auth,\n  app,\n  form,\n});\n\nexport const store = createStore(rootReducer, enhancedStore);\n\nexport type AppStateType = ReturnType<typeof rootReducer>;\n\nexport type ThunkType<\n  A extends Action = Action,\n  R = Promise<void>,\n  S = AppStateType\n> = ThunkAction<R, S, unknown, A>;\n\n// FIXME remove global __store__\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore next line\nwindow.store = store;\n","export default __webpack_public_path__ + \"static/media/logo.d6c257c2.svg\";","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport s from './Header.module.css';\nimport styleBtn from '../common/styles/button.module.css';\nimport logo from '../../assets/images/logo.svg';\n\nexport type HeaderPropsType = {\n  login: string | null;\n  logout: () => void;\n  isAuth: boolean;\n};\n\nexport const Header: FC<HeaderPropsType> = ({ login, logout, isAuth }) => {\n  return (\n    <header className={s.header}>\n      <div className={s.container}>\n        <img className={s.logo} src={logo} width=\"40\" height=\"40\" alt=\"Logo\" />\n        <div className={s.loginBlock}>\n          {isAuth ? (\n            <div>\n              <span className={s.login}>{login}</span>\n              <button type=\"button\" className={styleBtn.btn} onClick={logout}>\n                Log out\n              </button>\n            </div>\n          ) : (\n            <Link className={styleBtn.btn} to=\"/login\">\n              Log in\n            </Link>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Header } from './Header';\nimport { AppStateType } from '../../redux/reduxStore';\nimport { logout } from '../../redux/authReducer';\n\nexport type StatePropsType = {\n  login: string | null;\n  isAuth: boolean;\n};\n\nexport type DispatchPropsType = {\n  logout: () => void;\n};\n\nexport type PropsType = StatePropsType & DispatchPropsType;\n\nconst HeaderAPIContainer: FC<PropsType> = (props) => {\n  const { login, logout: logoutCallback, isAuth } = props;\n\n  return <Header login={login} logout={logoutCallback} isAuth={isAuth} />;\n};\n\nconst mapStateToProps = ({\n  auth: { login, isAuth },\n}: AppStateType): StatePropsType => {\n  return { login, isAuth };\n};\n\nexport const HeaderContainer = connect<\n  StatePropsType,\n  DispatchPropsType,\n  Record<string, never>,\n  AppStateType\n>(mapStateToProps, { logout })(HeaderAPIContainer);\n","import { useSelector } from 'react-redux';\nimport type { TypedUseSelectorHook } from 'react-redux';\nimport type { AppStateType } from '../redux/reduxStore';\n\nexport const useTypedSelector: TypedUseSelectorHook<AppStateType> = useSelector;\n","import { createSelector } from 'reselect';\n\nimport type { AppStateType } from './reduxStore';\nimport type { FilterType, UserType } from '../types/types';\n\nconst getUsersSelector = (state: AppStateType): Array<UserType> =>\n  state.usersPage.users;\n\nexport const getUsers = createSelector(\n  getUsersSelector,\n  (users): Array<UserType> => users.filter((u) => !!u),\n);\n\nexport const getPageSize = (state: AppStateType): number =>\n  state.usersPage.pageSize;\n\nexport const getTotalUsersCount = (state: AppStateType): number =>\n  state.usersPage.totalUsersCount;\n\nexport const getCurrentPage = (state: AppStateType): number =>\n  state.usersPage.currentPage;\n\nexport const getIsFetching = (state: AppStateType): boolean =>\n  state.usersPage.isFetching;\n\nexport const getFollowingInProgress = (state: AppStateType): Array<number> =>\n  state.usersPage.followingInProgress;\n\nexport const getUsersFilter = (state: AppStateType): FilterType =>\n  state.usersPage.filter;\n","import React, { FC } from 'react';\n\nimport s from './Paginator.module.css';\n\ntype PaginatorPropsType = {\n  pageSize: number;\n  totalItemsCount: number;\n  currentPage?: number;\n  changePageHandler: (page: number) => void;\n  portionSize?: number;\n};\n\nexport const Paginator: FC<PaginatorPropsType> = ({\n  pageSize,\n  totalItemsCount,\n  currentPage = 1,\n  changePageHandler,\n  portionSize = 10,\n}) => {\n  const portionCount = Math.ceil(totalItemsCount / pageSize);\n\n  const startIndex = Math.floor((currentPage - 1) / portionSize) * portionSize;\n\n  const pages = Array(portionSize)\n    .fill(null)\n    .reduce((acc, item, idx) => {\n      const current = idx + 1 + startIndex;\n\n      if (current <= portionCount) {\n        return [...acc, current];\n      }\n\n      return acc;\n    }, []);\n\n  return (\n    <div className={s.paginator}>\n      <button\n        type=\"button\"\n        className={`${s.btn}`}\n        disabled={currentPage === 1}\n        onClick={() => changePageHandler(1)}\n      >\n        First\n      </button>\n      <button\n        type=\"button\"\n        className={`${s.btn}`}\n        disabled={currentPage === 1}\n        onClick={() => changePageHandler(currentPage - 1)}\n      >\n        Previous\n      </button>\n      {pages.map((p: number) => {\n        const isCurrent = p === currentPage;\n\n        return (\n          <button\n            type=\"button\"\n            key={p}\n            className={`${s.btn} ${isCurrent && s.selected}`}\n            disabled={isCurrent}\n            onClick={() => changePageHandler(p)}\n          >\n            {p}\n          </button>\n        );\n      })}\n      <button\n        type=\"button\"\n        className={`${s.btn}`}\n        disabled={currentPage === portionCount}\n        onClick={() => changePageHandler(currentPage + 1)}\n      >\n        Next\n      </button>\n      <button\n        type=\"button\"\n        className={`${s.btn}`}\n        disabled={currentPage === portionCount}\n        onClick={() => changePageHandler(portionCount)}\n      >\n        Last\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\nimport type { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport s from './User.module.css';\nimport userAvatar from '../../../assets/images/userAvatar.svg';\nimport styleBtn from '../../common/styles/button.module.css';\nimport type { UserType } from '../../../types/types';\n\ntype UsersPropsType = {\n  user: UserType;\n  followingInProgress: Array<number>;\n  follow: (userId: number) => void;\n  unfollow: (userId: number) => void;\n};\n\nexport const User: FC<UsersPropsType> = ({\n  user,\n  followingInProgress,\n  follow,\n  unfollow,\n}) => {\n  return (\n    <li className={s.item}>\n      <div>\n        <div className={s.avatarWrapper}>\n          <Link to={`/profile/${user.id}`}>\n            <img\n              className={s.avatar}\n              src={user.photos.small || userAvatar}\n              width=\"50\"\n              height=\"50\"\n              alt=\"User avatar\"\n            />\n          </Link>\n        </div>\n        <div>\n          {user.followed ? (\n            <button\n              className={styleBtn.btn}\n              type=\"button\"\n              disabled={followingInProgress.some((id) => id === user.id)}\n              onClick={() => {\n                unfollow(user.id);\n              }}\n            >\n              Unfollow\n            </button>\n          ) : (\n            <button\n              className={styleBtn.btn}\n              type=\"button\"\n              disabled={followingInProgress.some((id) => id === user.id)}\n              onClick={() => {\n                follow(user.id);\n              }}\n            >\n              Follow\n            </button>\n          )}\n        </div>\n      </div>\n      <div className={s.info}>\n        <div>\n          <div className={s.name}>{user.name}</div>\n          <div className={s.status}>{user.status || 'Status is empty'}</div>\n        </div>\n        <div className={s.location}>\n          <div>user.location.country</div>\n          <div>user.location.city</div>\n        </div>\n      </div>\n    </li>\n  );\n};\n","export const transformValues = (value: string): boolean | null => {\n  switch (value) {\n    case 'true':\n      return true;\n    case 'false':\n      return false;\n    default:\n      return null;\n  }\n};\n","import React, { memo } from 'react';\nimport type { FC } from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport type { FormikHelpers } from 'formik';\n\nimport { transformValues } from '../../utils/formikUtils';\nimport type { FilterType } from '../../types/types';\n\ntype PropsType = {\n  changeFilterHandler: (filter: FilterType) => void;\n};\n\ntype FormFilterType = {\n  term: string;\n  friend: 'true' | 'false' | 'null';\n};\n\nexport const UsersSearchForm: FC<PropsType> = memo(\n  ({ changeFilterHandler }) => {\n    const initialValues: FormFilterType = { term: '', friend: 'null' };\n\n    const submitHandler = (\n      { term, friend }: FormFilterType,\n      { setSubmitting }: FormikHelpers<FormFilterType>,\n    ) => {\n      const values: FilterType = {\n        term,\n        friend: transformValues(friend),\n      };\n\n      changeFilterHandler(values);\n      setSubmitting(false);\n    };\n\n    return (\n      <Formik initialValues={initialValues} onSubmit={submitHandler}>\n        {({ isSubmitting }) => (\n          <Form>\n            <Field type=\"text\" name=\"term\" />\n\n            <Field name=\"friend\" as=\"select\">\n              <option value=\"null\">All</option>\n              <option value=\"true\">Only followed</option>\n              <option value=\"false\">Only unfollowed</option>\n            </Field>\n\n            <button type=\"submit\" disabled={isSubmitting}>\n              Find\n            </button>\n          </Form>\n        )}\n      </Formik>\n    );\n  },\n);\n\nUsersSearchForm.displayName = 'UsersSearchForm';\n","import React, { useEffect } from 'react';\nimport type { FC } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport s from './Users.module.css';\nimport styleBtn from '../common/styles/button.module.css';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport type { FilterType } from '../../types/types';\nimport { Paginator } from '../common/Paginator/Paginator';\nimport { User } from './User/User';\nimport { UsersSearchForm } from './UsersSearchForm';\nimport { fetchUsers, followUser, unfollowUser } from '../../redux/usersReducer';\nimport {\n  getUsers,\n  getTotalUsersCount,\n  getCurrentPage,\n  getPageSize,\n  getUsersFilter,\n  getFollowingInProgress,\n} from '../../redux/usersSelectors';\n\nexport const Users: FC = () => {\n  const dispatch = useDispatch();\n\n  const users = useTypedSelector(getUsers);\n  const totalUsersCount = useTypedSelector(getTotalUsersCount);\n  const currentPage = useTypedSelector(getCurrentPage);\n  const pageSize = useTypedSelector(getPageSize);\n  const filter = useTypedSelector(getUsersFilter);\n  const followingInProgress = useTypedSelector(getFollowingInProgress);\n\n  useEffect(() => {\n    dispatch(fetchUsers(currentPage, pageSize, filter));\n  }, [dispatch, currentPage, pageSize, filter]);\n\n  const changePageHandler = (page: number) => {\n    dispatch(fetchUsers(page, pageSize, filter));\n  };\n\n  const changeFilterHandler = (value: FilterType) => {\n    const page = 1;\n    dispatch(fetchUsers(page, pageSize, value));\n  };\n\n  const follow = (userId: number) => {\n    dispatch(followUser(userId));\n  };\n  const unfollow = (userId: number) => {\n    dispatch(unfollowUser(userId));\n  };\n\n  const userElements = users.map((user) => (\n    <User\n      key={user.id}\n      user={user}\n      followingInProgress={followingInProgress}\n      follow={follow}\n      unfollow={unfollow}\n    />\n  ));\n\n  return (\n    <div className={s.usersBlock}>\n      <UsersSearchForm changeFilterHandler={changeFilterHandler} />\n\n      <ul className={s.list}>{userElements}</ul>\n      <button className={styleBtn.btn} type=\"button\" onClick={() => {}}>\n        Show more\n      </button>\n\n      <Paginator\n        pageSize={pageSize}\n        totalItemsCount={totalUsersCount}\n        currentPage={currentPage}\n        changePageHandler={changePageHandler}\n      />\n    </div>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nexport const reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n","import React from 'react';\nimport type { FC } from 'react';\n\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport { getIsFetching } from '../../redux/usersSelectors';\nimport { Users } from './Users';\nimport { Preloader } from '../common/Preloader/Preloader';\n\nexport const UsersPage: FC = () => {\n  const isFetching = useTypedSelector(getIsFetching);\n\n  return (\n    <>\n      {isFetching && <Preloader text=\"Loading...\" />}\n\n      <Users />\n    </>\n  );\n};\n","import React from 'react';\nimport type { FC } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { reduxForm, Field } from 'redux-form';\nimport type { InjectedFormProps } from 'redux-form';\n\nimport s from './Login.module.css';\nimport styleBtn from '../common/styles/button.module.css';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport { Input } from '../common/FormsControls/FormsControls';\nimport { maxLengthCreator, required } from '../../utils/validators';\nimport { login } from '../../redux/authReducer';\n\nconst maxLength30 = maxLengthCreator(30);\n\ntype LoginFormDataType = {\n  email: string;\n  password: string;\n  rememberMe: boolean;\n  captcha: string;\n};\n\ntype LoginFormOwnPropsType = {\n  captchaUrl: null | string;\n};\n\nconst LoginForm: FC<\n  InjectedFormProps<LoginFormDataType, LoginFormOwnPropsType> &\n    LoginFormOwnPropsType\n> = ({ handleSubmit, error, captchaUrl }) => {\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <Field\n        component={Input}\n        name=\"email\"\n        placeholder=\"Email\"\n        validate={[required, maxLength30]}\n      />\n\n      <Field\n        component={Input}\n        type=\"password\"\n        name=\"password\"\n        placeholder=\"Password\"\n        validate={[required, maxLength30]}\n      />\n\n      {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n      <label className={`${s.checkboxWrapper}`}>\n        <Field\n          className={s.checkbox}\n          component=\"input\"\n          type=\"checkbox\"\n          name=\"rememberMe\"\n        />\n        <span className={s.hint}>remember me</span>\n      </label>\n\n      {captchaUrl && (\n        <div className={`${s.captchaWrapper}`}>\n          <img src={captchaUrl} alt=\"Captcha\" />\n\n          <Field\n            component={Input}\n            name=\"captcha\"\n            placeholder=\"Symbols from image\"\n            validate={[required]}\n          />\n        </div>\n      )}\n\n      <div className={`${s.errorWrapper}`}>\n        {error && <span className={`${s.error}`}>{error}</span>}\n      </div>\n\n      <div className={`${s.btnWrapper}`}>\n        <button type=\"submit\" className={styleBtn.btn}>\n          Log in\n        </button>\n      </div>\n    </form>\n  );\n};\n\nconst LoginReduxForm = reduxForm<LoginFormDataType, LoginFormOwnPropsType>({\n  form: 'login',\n})(LoginForm);\n\nexport const LoginPage: FC = () => {\n  const dispatch = useDispatch();\n\n  const isAuth = useTypedSelector((state) => state.auth.isAuth);\n  const captchaUrl = useTypedSelector((state) => state.auth.captchaUrl);\n\n  const submitHandler = (formData: LoginFormDataType) => {\n    dispatch(login({ ...formData }));\n  };\n\n  if (isAuth) return <Redirect to=\"/profile\" />;\n\n  return (\n    <div>\n      <h1 className={s.title}>Login</h1>\n\n      <div className={s.loginFormWrapper}>\n        <LoginReduxForm onSubmit={submitHandler} captchaUrl={captchaUrl} />\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport s from './Error404.module.css';\n\nexport const Error404: FC = () => {\n  return (\n    <div className={s.page}>\n      <div className={s.main}>\n        <h1 className={s.title}>404 - Not&nbsp;found</h1>\n        <p className={s.text}>\n          —<span>Uh oh.</span> <span>¯\\_(ツ)_/¯</span>—\n        </p>\n      </div>\n    </div>\n  );\n};\n","import React, { lazy } from 'react';\nimport type { FC } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { UsersPage } from '../components/Users/UsersPage';\nimport { LoginPage } from '../components/Login/Login';\nimport { Error404 } from '../components/common/Error404/Error404';\n\nexport const PATH = {\n  PROFILE: '/profile',\n  DIALOGS: '/dialogs',\n  USERS: '/users',\n\n  LOGIN: '/login',\n  ERROR_404: '/404',\n  BASENAME: '/react-way-of-samurai',\n};\n\nconst DialogsContainer = lazy(async () => {\n  const module = await import('../components/Dialogs/DialogsContainer');\n  return { default: module.DialogsContainer };\n});\nconst ProfileContainer = lazy(async () => {\n  const module = await import('../components/Profile/ProfileContainer');\n  return { default: module.ProfileContainer };\n});\n\nexport const Routes: FC = () => {\n  return (\n    <>\n      <Switch>\n        <Route path=\"/\" exact render={() => <Redirect to={PATH.PROFILE} />} />\n\n        <Route\n          path={`${PATH.PROFILE}/:userId?`}\n          render={() => <ProfileContainer />}\n        />\n        <Route path={PATH.DIALOGS} render={() => <DialogsContainer />} />\n        <Route path={PATH.USERS} render={() => <UsersPage />} />\n        <Route path={PATH.LOGIN} render={() => <LoginPage />} />\n        <Route path={PATH.ERROR_404} render={() => <Error404 />} />\n\n        <Redirect from=\"*\" to={PATH.ERROR_404} />\n      </Switch>\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport s from './Navbar.module.css';\nimport { randomId } from '../../utils/randomId';\nimport { PATH } from '../../app/Routes';\n\nexport const Navbar: FC = () => {\n  return (\n    <nav className={s.nav}>\n      <ul className={s.list}>\n        {Object.entries(PATH)\n          .slice(0, 3)\n          .map(([title, link]) => {\n            return (\n              <li key={randomId()} className={s.item}>\n                <NavLink\n                  className={s.link}\n                  to={link}\n                  activeClassName={s.active}\n                  replace\n                >\n                  {title.toLowerCase()}\n                </NavLink>\n              </li>\n            );\n          })}\n      </ul>\n    </nav>\n  );\n};\n","import React, { Component, Suspense } from 'react';\nimport type { ComponentType, FC } from 'react';\nimport { BrowserRouter as Router, withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { connect, Provider } from 'react-redux';\n\nimport s from './App.module.css';\nimport { store } from '../redux/reduxStore';\nimport type { AppStateType } from '../redux/reduxStore';\nimport { HeaderContainer } from '../components/Header/HeaderContainer';\nimport { Navbar } from '../components/Navbar/Navbar';\nimport { initializeApp } from '../redux/appReducer';\nimport { Preloader } from '../components/common/Preloader/Preloader';\nimport { Routes, PATH } from './Routes';\n\ntype StatePropsType = {\n  initialized: boolean;\n};\n\ntype DispatchPropsType = {\n  initializeApp: () => void;\n};\n\ntype PropsType = StatePropsType & DispatchPropsType;\n\nclass App extends Component<PropsType> {\n  componentDidMount() {\n    this.props.initializeApp();\n    window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  catchAllUnhandledErrors = (e: PromiseRejectionEvent) => {\n    // TODO dispatch error message instead of alert (lesson 99, 45:00)\n    // eslint-disable-next-line no-alert\n    alert('Some error occurred');\n  };\n\n  componentWillUnount() {\n    window.removeEventListener(\n      'unhandledrejection',\n      this.catchAllUnhandledErrors,\n    );\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return (\n        <div className={s.preloaderAppWrapper}>\n          <Preloader text=\"Loading SamuraiJSApp\" />\n        </div>\n      );\n    }\n\n    return (\n      <div className={s.appWrapper}>\n        <HeaderContainer />\n\n        <div className={s.container}>\n          <Navbar />\n\n          <main className={s.appContent}>\n            <Suspense\n              fallback={\n                <div className={s.preloaderPageWrapper}>\n                  <Preloader text=\"Loading...\" />\n                </div>\n              }\n            >\n              <Routes />\n            </Suspense>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  app: { initialized },\n}: AppStateType): StatePropsType => {\n  return {\n    initialized,\n  };\n};\n\nconst AppContainer = compose<ComponentType>(\n  connect(mapStateToProps, { initializeApp }),\n  withRouter,\n)(App);\n\nexport const SamuraiJSApp: FC = () => {\n  return (\n    <Provider store={store}>\n      <Router basename={PATH.BASENAME}>\n        <AppContainer />\n      </Router>\n    </Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { SamuraiJSApp } from './app/App';\nimport { reportWebVitals } from './reportWebVitals';\n\nReactDOM.render(<SamuraiJSApp />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Paginator_btn__C1fmc\",\"selected\":\"Paginator_selected__2cTTO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"User_item__2PdYA\",\"avatarWrapper\":\"User_avatarWrapper__abUew\",\"avatar\":\"User_avatar__27DBJ\",\"info\":\"User_info__2Xv8f\",\"location\":\"User_location__2fcbB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__ZMEuH\",\"container\":\"App_container__7_OSo container_container__1yKAy\",\"appContent\":\"App_appContent__3kXFC\",\"preloaderAppWrapper\":\"App_preloaderAppWrapper__37ovM\",\"preloaderPageWrapper\":\"App_preloaderPageWrapper__3acpy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"container\":\"Header_container__1VC87 container_container__1yKAy\",\"logo\":\"Header_logo__3_SJs\",\"login\":\"Header_login__3V3Qa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"list\":\"Navbar_list__2GzPV\",\"link\":\"Navbar_link__TNvz9\",\"active\":\"Navbar_active__3mbhk\"};","import React, { FC } from 'react';\n\nimport s from './Preloader.module.css';\n\ntype PreloaderPropsType = {\n  text?: string;\n};\n\nexport const Preloader: FC<PreloaderPropsType> = ({ text }) => {\n  return (\n    <div className={s.preloader}>\n      <div className={s.loaderCircle} />\n      <div className={s.loaderBottom}>{text}</div>\n    </div>\n  );\n};\n","type FieldValidatorType = (value: string) => string | undefined;\n\nexport const required: FieldValidatorType = (value) => {\n  return value ? undefined : 'Field is required';\n};\n\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (\n  value,\n) => {\n  return value && value.length > maxLength\n    ? `Max length is ${maxLength} symbols`\n    : undefined;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Error404_page__OgCEo\",\"title\":\"Error404_title__AzCYh\",\"text\":\"Error404_text__2CMhG\"};","import React, { FC } from 'react';\nimport { WrappedFieldMetaProps, WrappedFieldProps } from 'redux-form';\n\nimport s from './FormsControls.module.css';\n\ntype FormControlPropsType = {\n  meta: WrappedFieldMetaProps;\n  className?: string;\n};\n\nexport const FormControl: FC<FormControlPropsType> = ({\n  meta: { touched, error },\n  children,\n  className = '',\n}) => {\n  const hasError = touched && error;\n\n  const formControlClassName = `${s.formControl} ${className} ${\n    hasError && s.formControlError\n  }`;\n\n  return (\n    <div className={formControlClassName}>\n      {hasError && <span className={`${s.error}`}>{error}</span>}\n\n      {children}\n    </div>\n  );\n};\n\nexport const Textarea: FC<WrappedFieldProps> = (props) => {\n  const { input, meta, ...restProps } = props;\n\n  return (\n    <FormControl {...props}>\n      <textarea {...input} {...restProps} />\n    </FormControl>\n  );\n};\n\nexport const Input: FC<WrappedFieldProps> = (props) => {\n  const { input, meta, ...restProps } = props;\n\n  return (\n    <FormControl {...props}>\n      <input type=\"text\" {...input} {...restProps} />\n    </FormControl>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2dvkO\",\"loaderCircle\":\"Preloader_loaderCircle__2WGY1\",\"load\":\"Preloader_load__3tO9j\",\"loaderBottom\":\"Preloader_loaderBottom__3u2bT\",\"pulse\":\"Preloader_pulse__2uAlH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formControlError\":\"FormsControls_formControlError__MEb4f\"};","import axios from 'axios';\n\nexport const API = axios.create({\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  withCredentials: true,\n  headers: {\n    'API-KEY': process.env.REACT_APP_API_KEY,\n  },\n});\n\nexport type ItemsResponseType<I> = {\n  items: Array<I>;\n  totalCount: number;\n  error: string | null;\n};\n\nexport enum ResultCode {\n  Success = 0,\n  Error = 1,\n}\n\nexport enum ResultCodeCaptcha {\n  Required = 10,\n}\n\nexport type ApiResponseType<D = Record<string, unknown>, RC = ResultCode> = {\n  resultCode: RC;\n  messages: Array<string>;\n  data: D;\n};\n"],"sourceRoot":""}