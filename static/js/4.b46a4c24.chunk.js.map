{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/AddMessageForm/AddMessageForm.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx"],"names":["module","exports","DialogItem","name","id","path","className","s","dialog","to","activeClassName","active","Message","message","text","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","handleSubmit","onSubmit","Field","component","Textarea","placeholder","validate","required","type","styleBtn","btn","mapStateToPropsForRedirect","isAuth","auth","sendMessage","dialogsActons","DialogsContainer","compose","connect","dialogsPage","WrappedComponent","restProps","dialogs","messages","dialogsElements","map","d","messagesElements","m","dialogsList","chat","messagesList","formData"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,aAAe,gC,oBCA/GD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,oBCA/DD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,wB,oBCA5DD,EAAOC,QAAU,CAAC,KAAO,+B,uKCKZC,EAAiC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GAC/CC,EAAI,mBAAeD,GAEzB,OACE,oBAAIE,UAAWC,IAAEC,OAAjB,SACE,cAAC,IAAD,CAASC,GAAIJ,EAAMK,gBAAiBH,IAAEI,OAAtC,SACGR,O,kBCPIS,EAA2B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACzC,OACE,oBAAIP,UAAWC,IAAEM,QAAjB,SACE,sBAAMP,UAAWC,IAAEO,KAAnB,SAA0BD,O,qECA1BE,EAAeC,YAAiB,KA2BzBC,EAAsBC,YAAkC,CACnEC,KAAM,wBAD2BD,EArBmC,SAAC,GAEhE,IADLE,EACI,EADJA,aAEA,OACE,uBAAMd,UAAWC,IAAEY,KAAME,SAAUD,EAAnC,UACE,cAACE,EAAA,EAAD,CACEC,UAAWC,IACXrB,KAAK,UACLsB,YAAY,wBACZC,SAAU,CAACC,IAAUZ,KAGvB,8BACE,wBAAQa,KAAK,SAAStB,UAAWuB,IAASC,IAA1C,0B,gCClBFC,EAA6B,SAAC,GAAD,MAChC,CACCC,OAF+B,EAAGC,KAAQD,S,ICAtCE,EAAgBC,IAAhBD,YAQKE,EAAmBC,YAC9BC,aAPsB,SAAC,GACvB,MAAO,CACLC,YAFuE,EAAhDA,eAOA,CAAEL,iBDJtB,SACLM,GAOA,OAAOF,YAMLP,EACA,GAPKO,EALuC,SAAC,GAA8B,IAA5BN,EAA2B,EAA3BA,OAAWS,EAAgB,0BAC1E,OAAKT,EACE,cAACQ,EAAD,eAAuBC,IADV,cAAC,IAAD,CAAUhC,GAAG,gBCDL4B,ECE+B,SAAC,GAGzD,IAAD,IAFJE,YAAeG,EAEX,EAFWA,QAASC,EAEpB,EAFoBA,SACxBT,EACI,EADJA,YAMMU,EAAkBF,EAAQG,KAAI,SAACC,GAAD,OAClC,cAAC,EAAD,CAAuB3C,KAAM2C,EAAE3C,KAAMC,GAAI0C,EAAE1C,IAA1B0C,EAAE1C,OAGf2C,EAAmBJ,EAASE,KAAI,SAACG,GAAD,OACpC,cAAC,EAAD,CAAoBnC,QAASmC,EAAEnC,QAAST,GAAI4C,EAAE5C,IAAhC4C,EAAE5C,OAGlB,OACE,sBAAKE,UAAWC,IAAEmC,QAAlB,UACE,oBAAIpC,UAAWC,IAAE0C,YAAjB,SAA+BL,IAE/B,sBAAKtC,UAAWC,IAAE2C,KAAlB,UACE,oBAAI5C,UAAWC,IAAE4C,aAAjB,SAAgCJ,IAEhC,8BACE,8BACE,cAAC,EAAD,CAAgB1B,SArBC,SAAC+B,GAC1BlB,EAAYkB,EAASvC","file":"static/js/4.b46a4c24.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsList\":\"Dialogs_dialogsList__137kM\",\"messagesList\":\"Dialogs_messagesList__3P5tp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3tDA2\",\"active\":\"DialogItem_active__2qnc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1MOXo\",\"text\":\"Message_text__3SVVn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddMessageForm_form__1HTWm\"};","import React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport s from './DialogItem.module.css';\nimport { DialogItemType } from '../../../types/types';\n\nexport const DialogItem: FC<DialogItemType> = ({ name, id }) => {\n  const path = `/dialogs/${id}`;\n\n  return (\n    <li className={s.dialog}>\n      <NavLink to={path} activeClassName={s.active}>\n        {name}\n      </NavLink>\n    </li>\n  );\n};\n","import React, { FC } from 'react';\n\nimport s from './Message.module.css';\nimport { MessageType } from '../../../types/types';\n\nexport const Message: FC<MessageType> = ({ message }) => {\n  return (\n    <li className={s.message}>\n      <span className={s.text}>{message}</span>\n    </li>\n  );\n};\n","import React, { FC } from 'react';\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\n\nimport s from './AddMessageForm.module.css';\nimport styleBtn from '../../common/styles/button.module.css';\nimport { maxLengthCreator, required } from '../../../utils/validators';\nimport { Textarea } from '../../common/FormsControls/FormsControls';\n\nconst maxLength100 = maxLengthCreator(100);\n\nexport type AddMessageFormDataType = {\n  message: string;\n};\n\nconst AddMessageForm: FC<InjectedFormProps<AddMessageFormDataType>> = ({\n  handleSubmit,\n}) => {\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <Field\n        component={Textarea}\n        name=\"message\"\n        placeholder=\"Enter your message...\"\n        validate={[required, maxLength100]}\n      />\n\n      <div>\n        <button type=\"submit\" className={styleBtn.btn}>\n          Send\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport const AddMessageFormRedux = reduxForm<AddMessageFormDataType>({\n  form: 'dialogAddMessageForm',\n})(AddMessageForm);\n","import React, { ComponentType, FC } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect, ConnectedComponent } from 'react-redux';\nimport { AppStateType } from '../redux/reduxStore';\n\ntype StatePropsType = {\n  isAuth: boolean;\n};\n\nconst mapStateToPropsForRedirect = ({ auth: { isAuth } }: AppStateType) =>\n  ({\n    isAuth,\n  } as StatePropsType);\n\nexport function withAuthRedirect<WCP>(\n  WrappedComponent: ComponentType<WCP>,\n): ConnectedComponent<FC<StatePropsType>, never> {\n  const RedirectComponent: FC<StatePropsType> = ({ isAuth, ...restProps }) => {\n    if (!isAuth) return <Redirect to=\"/login\" />;\n    return <WrappedComponent {...(restProps as WCP)} />;\n  };\n\n  return connect<\n    StatePropsType,\n    Record<string, never>,\n    Record<string, never>,\n    AppStateType\n  >(\n    mapStateToPropsForRedirect,\n    {},\n  )(RedirectComponent);\n}\n","import { ComponentType } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { Dialogs, StatePropsType } from './Dialogs';\nimport { AppStateType } from '../../redux/reduxStore';\nimport { actions as dialogsActons } from '../../redux/dialogsReducer';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\n\nconst { sendMessage } = dialogsActons;\n\nconst mapStateToProps = ({ dialogsPage }: AppStateType): StatePropsType => {\n  return {\n    dialogsPage,\n  };\n};\n\nexport const DialogsContainer = compose<ComponentType>(\n  connect(mapStateToProps, { sendMessage }),\n  withAuthRedirect,\n)(Dialogs);\n","import React, { FC } from 'react';\n\nimport s from './Dialogs.module.css';\nimport { DialogsPageStateType } from '../../redux/dialogsReducer';\nimport { DialogItem } from './DialogItem/DialogItem';\nimport { Message } from './Message/Message';\nimport {\n  AddMessageFormDataType,\n  AddMessageFormRedux as AddMessageForm,\n} from './AddMessageForm/AddMessageForm';\n\nexport type StatePropsType = {\n  dialogsPage: DialogsPageStateType;\n};\n\nexport type DispatchPropsType = {\n  sendMessage: (message: string) => void;\n};\n\nexport const Dialogs: FC<StatePropsType & DispatchPropsType> = ({\n  dialogsPage: { dialogs, messages },\n  sendMessage,\n}) => {\n  const sendMessageHandler = (formData: AddMessageFormDataType) => {\n    sendMessage(formData.message);\n  };\n\n  const dialogsElements = dialogs.map((d) => (\n    <DialogItem key={d.id} name={d.name} id={d.id} />\n  ));\n\n  const messagesElements = messages.map((m) => (\n    <Message key={m.id} message={m.message} id={m.id} />\n  ));\n\n  return (\n    <div className={s.dialogs}>\n      <ul className={s.dialogsList}>{dialogsElements}</ul>\n\n      <div className={s.chat}>\n        <ul className={s.messagesList}>{messagesElements}</ul>\n\n        <div>\n          <div>\n            <AddMessageForm onSubmit={sendMessageHandler} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}